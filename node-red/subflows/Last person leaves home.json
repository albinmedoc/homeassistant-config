[
  {
    "id": "10bf6a612840df6b",
    "type": "subflow",
    "name": "Last person leaves home",
    "info": "",
    "category": "",
    "in": [],
    "out": [
      {
        "x": 1030,
        "y": 60,
        "wires": [
          {
            "id": "63aa7075ace1ec06",
            "port": 0
          }
        ]
      },
      {
        "x": 1030,
        "y": 260,
        "wires": [
          {
            "id": "f28cfb1eaf9dd39e",
            "port": 0
          }
        ]
      }
    ],
    "env": [
      {
        "name": "output_person",
        "type": "str",
        "value": "",
        "ui": {
          "icon": "font-awesome/fa-sign-out",
          "label": {
            "en-US": "Person"
          },
          "type": "input",
          "opts": {
            "types": [
              "str"
            ]
          }
        }
      }
    ],
    "meta": {},
    "color": "#DDAA99",
    "outputLabels": [
      "person",
      "guest"
    ],
    "status": {
      "x": 1000,
      "y": 140,
      "wires": [
        {
          "id": "a008fb2ad1c74bdc",
          "port": 0
        },
        {
          "id": "a731138b4bea4cc2",
          "port": 0
        }
      ]
    }
  },
  {
    "id": "f28cfb1eaf9dd39e",
    "type": "junction",
    "z": "10bf6a612840df6b",
    "x": 780,
    "y": 260,
    "wires": [
      []
    ]
  },
  {
    "id": "1460052b763787b4",
    "type": "server-state-changed",
    "z": "10bf6a612840df6b",
    "name": "Nobody home",
    "server": "e9739673.bbfed8",
    "version": 4,
    "exposeToHomeAssistant": false,
    "haConfig": [
      {
        "property": "name",
        "value": ""
      },
      {
        "property": "icon",
        "value": ""
      }
    ],
    "entityidfilter": "zone.home",
    "entityidfiltertype": "exact",
    "outputinitially": false,
    "state_type": "num",
    "haltifstate": "0",
    "halt_if_type": "num",
    "halt_if_compare": "is",
    "outputs": 2,
    "output_only_on_state_change": true,
    "for": "0",
    "forType": "num",
    "forUnits": "minutes",
    "ignorePrevStateNull": false,
    "ignorePrevStateUnknown": false,
    "ignorePrevStateUnavailable": false,
    "ignoreCurrentStateUnknown": false,
    "ignoreCurrentStateUnavailable": false,
    "outputProperties": [
      {
        "property": "data",
        "propertyType": "msg",
        "value": "",
        "valueType": "eventData"
      }
    ],
    "x": 110,
    "y": 60,
    "wires": [
      [
        "cca8176dfb811e96"
      ],
      []
    ]
  },
  {
    "id": "16f07124f699c070",
    "type": "function",
    "z": "10bf6a612840df6b",
    "name": "Get person that left",
    "func": "const old_persons = msg.data.old_state.attributes.persons;\nconst new_persons = msg.data.new_state.attributes.persons;\n\nconst person = old_persons.filter(p => !new_persons.includes(p))[0];\n\nreturn {\n    person\n};",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 690,
    "y": 60,
    "wires": [
      [
        "a008fb2ad1c74bdc",
        "63aa7075ace1ec06"
      ]
    ]
  },
  {
    "id": "a008fb2ad1c74bdc",
    "type": "function",
    "z": "10bf6a612840df6b",
    "name": "Create status",
    "func": "const text = msg.person;\n\nreturn {\n    payload: {\n        fill: \"green\",\n        text\n    }\n};",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 860,
    "y": 140,
    "wires": [
      []
    ]
  },
  {
    "id": "cca8176dfb811e96",
    "type": "function",
    "z": "10bf6a612840df6b",
    "name": "setup",
    "func": "// Define inputs\nconst env_keys = ['media_player', 'message'];\n\n// Where should the parsed inputs be stored during the subflow\nconst storage = 'flow_storage';\n\n// Save the msg\nflow.set('input_msg', JSON.stringify(msg));\n\nmsg[storage] = {};\n\n// Check if string contains mustache\nconst containsMustache = (str) => {\n    const regex = /{{(?:(?!}}).+)}}/g;\n    return regex.test(str);\n}\n\n// Parse inputs\nenv_keys.forEach((env_key) => {\n    let env_value = env.get(env_key);\n    if (containsMustache(env_value)) {\n        env_value = env_value.replace(/(\\{{)\\s*(\\S+)\\s*(\\}})/g, \"$2\");\n        env_value = selectn(env_value, msg);\n    }\n    msg[storage][env_key] = env_value;\n});\n\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [
      {
        "var": "selectn",
        "module": "selectn"
      }
    ],
    "x": 270,
    "y": 60,
    "wires": [
      [
        "681185c42c7a2b36"
      ]
    ]
  },
  {
    "id": "63aa7075ace1ec06",
    "type": "function",
    "z": "10bf6a612840df6b",
    "name": "cleanup",
    "func": "// Define outputs\n// * Key - environment variable\n// * Value - msg path to value\nconst outputs = {\n    'output_person': 'person'\n};\n\nconst buildObjWithValue = (path, value = '') => {\n    const paths = path.split('.');\n    return paths.reduceRight((acc, item, index) => ({\n        [item]: index === paths.length - 1\n            ? value\n            : acc\n    }), {});\n}\n\n// Set output variables\nconst output_values = {};\nObject.keys(outputs).forEach((output_key) => {\n    const output_value_path = outputs[output_key];\n    const output_value_location = env.get(output_key);\n    const output_value = selectn(output_value_path, msg)\n    if (output_value_location && output_value_location !== \"\") {\n        Object.assign(output_values, buildObjWithValue(output_value_location, output_value));\n    }\n});\n\n// Load the msg as the input was to the subflow\nconst pre_msg = JSON.parse(flow.get('input_msg'));\n\n// Return the input message alongside the outputs\nmsg = Object.assign(pre_msg, output_values);\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [
      {
        "var": "selectn",
        "module": "selectn"
      }
    ],
    "x": 880,
    "y": 60,
    "wires": [
      []
    ]
  },
  {
    "id": "799ec6bada6d1670",
    "type": "server-state-changed",
    "z": "10bf6a612840df6b",
    "name": "Guest mode inactive",
    "server": "e9739673.bbfed8",
    "version": 4,
    "exposeToHomeAssistant": false,
    "haConfig": [
      {
        "property": "name",
        "value": ""
      },
      {
        "property": "icon",
        "value": ""
      }
    ],
    "entityidfilter": "input_boolean.guest_mode",
    "entityidfiltertype": "exact",
    "outputinitially": false,
    "state_type": "str",
    "haltifstate": "off",
    "halt_if_type": "str",
    "halt_if_compare": "is",
    "outputs": 2,
    "output_only_on_state_change": true,
    "for": "0",
    "forType": "num",
    "forUnits": "minutes",
    "ignorePrevStateNull": false,
    "ignorePrevStateUnknown": false,
    "ignorePrevStateUnavailable": false,
    "ignoreCurrentStateUnknown": false,
    "ignoreCurrentStateUnavailable": false,
    "outputProperties": [],
    "x": 130,
    "y": 120,
    "wires": [
      [
        "5c7f5d2a691d5890"
      ],
      []
    ]
  },
  {
    "id": "5c7f5d2a691d5890",
    "type": "api-current-state",
    "z": "10bf6a612840df6b",
    "name": "Someone home?",
    "server": "e9739673.bbfed8",
    "version": 3,
    "outputs": 2,
    "halt_if": "0",
    "halt_if_type": "num",
    "halt_if_compare": "gt",
    "entity_id": "zone.home",
    "state_type": "str",
    "blockInputOverrides": false,
    "outputProperties": [],
    "for": "0",
    "forType": "num",
    "forUnits": "minutes",
    "override_topic": false,
    "state_location": "payload",
    "override_payload": "msg",
    "entity_location": "data",
    "override_data": "msg",
    "x": 350,
    "y": 120,
    "wires": [
      [],
      [
        "a731138b4bea4cc2",
        "f28cfb1eaf9dd39e"
      ]
    ]
  },
  {
    "id": "a731138b4bea4cc2",
    "type": "function",
    "z": "10bf6a612840df6b",
    "name": "Create status",
    "func": "return {\n    payload: {\n        fill: \"green\",\n        text: \"Guest\"\n    }\n};",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 860,
    "y": 200,
    "wires": [
      []
    ]
  },
  {
    "id": "681185c42c7a2b36",
    "type": "api-current-state",
    "z": "10bf6a612840df6b",
    "name": "Guest mode active?",
    "server": "e9739673.bbfed8",
    "version": 3,
    "outputs": 2,
    "halt_if": "on",
    "halt_if_type": "str",
    "halt_if_compare": "is",
    "entity_id": "input_boolean.guest_mode",
    "state_type": "str",
    "blockInputOverrides": false,
    "outputProperties": [],
    "for": "0",
    "forType": "num",
    "forUnits": "minutes",
    "override_topic": false,
    "state_location": "payload",
    "override_payload": "msg",
    "entity_location": "data",
    "override_data": "msg",
    "x": 460,
    "y": 60,
    "wires": [
      [],
      [
        "16f07124f699c070"
      ]
    ]
  }
]