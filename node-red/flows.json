[
    {
        "id": "9efec2a1dc0f28f5",
        "type": "tab",
        "label": "Playground",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7c1b8ecc3bcbbebd",
        "type": "tab",
        "label": "Väggbrytare",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "8cf7f0d9a08b3655",
        "type": "tab",
        "label": "Rörelsesensorer",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1f26ba8a27c1477d",
        "type": "tab",
        "label": "Nattlampa",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "896b946718d5907e",
        "type": "tab",
        "label": "Kameror",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9081c37be56bc95b",
        "type": "tab",
        "label": "Larm",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f6c266122b405d78",
        "type": "tab",
        "label": "Dammsugare",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "9d7cd8ae.f2fe48",
        "type": "tab",
        "label": "Home Assistant",
        "disabled": false,
        "info": ""
    },
    {
        "id": "791362d653843ce3",
        "type": "tab",
        "label": "Nattläge",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "7f81ec7457fe49ea",
        "type": "tab",
        "label": "Enkla TTS",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "59b6382f2b4b4619",
        "type": "tab",
        "label": "TV",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "cd9a5746e1f519c9",
        "type": "tab",
        "label": "Onödigt",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "5da5355c5d6e8223",
        "type": "subflow",
        "name": "Home Assistant start",
        "info": "",
        "category": "home_assistant",
        "in": [],
        "out": [
            {
                "x": 520,
                "y": 60,
                "wires": [
                    {
                        "id": "b46e7e0a.fef1f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#41bdf5",
        "icon": "font-awesome/fa-home"
    },
    {
        "id": "5c7f108f494183f7",
        "type": "subflow",
        "name": "Första person kommer hem",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 1100,
                "y": 60,
                "wires": [
                    {
                        "id": "8ba3ed2570504118",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "output_person",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-sign-out",
                    "label": {
                        "en-US": "Person"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1100,
            "y": 140,
            "wires": [
                {
                    "id": "bb71c5a1e7a3f063",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "10bf6a612840df6b",
        "type": "subflow",
        "name": "Sista person lämnar hem",
        "info": "",
        "category": "",
        "in": [],
        "out": [
            {
                "x": 880,
                "y": 60,
                "wires": [
                    {
                        "id": "63aa7075ace1ec06",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "output_person",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-sign-out",
                    "label": {
                        "en-US": "Person"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 880,
            "y": 140,
            "wires": [
                {
                    "id": "a008fb2ad1c74bdc",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "92acfb4d26effac0",
        "type": "subflow",
        "name": "Hämta personer hemma",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "efa87fa685b4707b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 920,
                "y": 60,
                "wires": [
                    {
                        "id": "229ceb6c0a1113fd",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "output_persons",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-sign-out",
                    "label": {
                        "en-US": "Persons"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 920,
            "y": 140,
            "wires": [
                {
                    "id": "6a9480372530925d",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "29024697abc79029",
        "type": "subflow",
        "name": "Hämta personer borta",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "581c28f951e7c8b8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 60,
                "wires": [
                    {
                        "id": "b99d4f8b51752826",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "output_persons",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-sign-out",
                    "label": {
                        "en-US": "Persons"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 940,
            "y": 140,
            "wires": [
                {
                    "id": "781785e263a6d008",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "9577215509c764c6",
        "type": "subflow",
        "name": "Skicka notis till person",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "c5877a07df0c2c4a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 840,
                "y": 60,
                "wires": [
                    {
                        "id": "d979026fdf4f7bf0",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "person",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Person"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "notify_data",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Notify data"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "json"
                        ]
                    }
                }
            },
            {
                "name": "output_notify_service",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-sign-out",
                    "label": {
                        "en-US": "Notify service"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 840,
            "y": 140,
            "wires": [
                {
                    "id": "8b7d6855d09b0533",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "6be012d64f25f43f",
        "type": "subflow",
        "name": "Skicka notis till personer",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "bafa2d49610af115"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1260,
                "y": 60,
                "wires": [
                    {
                        "id": "77312eb671db8184",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "persons",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Persons"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "json"
                        ]
                    }
                }
            },
            {
                "name": "notify_data",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Notify data"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "json"
                        ]
                    }
                }
            },
            {
                "name": "output_notify_services",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-sign-out",
                    "label": {
                        "en-US": "Notify services"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1260,
            "y": 140,
            "wires": [
                {
                    "id": "024de54230752dc1",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "c0dcc6a2aeb58851",
        "type": "subflow",
        "name": "Skicka notis till personer hemma",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "e5c1510d1f6ac359"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 960,
                "y": 60,
                "wires": [
                    {
                        "id": "aec726546392d501",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "notify_data",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Notify data"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "json"
                        ]
                    }
                }
            },
            {
                "name": "output_notify_services",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-sign-out",
                    "label": {
                        "en-US": "Notify services"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "output_persons",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-sign-out",
                    "label": {
                        "en-US": "Persons"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 960,
            "y": 140,
            "wires": [
                {
                    "id": "6fec81bf15051b42",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "362c301346dfdfcc",
        "type": "subflow",
        "name": "Skicka notis till personer borta",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "c3925d7dd6da7909"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 60,
                "wires": [
                    {
                        "id": "30817a201e9a8b5e",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "notify_data",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Notify data"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "json"
                        ]
                    }
                }
            },
            {
                "name": "output_notify_services",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-sign-out",
                    "label": {
                        "en-US": "Notify services"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "output_persons",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-sign-out",
                    "label": {
                        "en-US": "Persons"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 940,
            "y": 120,
            "wires": [
                {
                    "id": "58e5fe0c3317d285",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "ad0b3a8015e7f49b",
        "type": "subflow",
        "name": "Spela media",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "7d5dcacedbbc15e3"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "media_player",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Media player"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "media_content_type",
                "type": "str",
                "value": "audio/mp3",
                "ui": {
                    "label": {
                        "en-US": "Content type"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "media_content_id",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Content Id"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "announce",
                "type": "bool",
                "value": "true",
                "ui": {
                    "label": {
                        "en-US": "Announce"
                    },
                    "type": "checkbox"
                }
            },
            {
                "name": "volume_level",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Volume"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "17f3c422bcd5a1fb",
        "type": "subflow",
        "name": "Spela TTS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "792a8dd0d8a39c60"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1600,
                "y": 60,
                "wires": [
                    {
                        "id": "665eda0df34dc544",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "media_player",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Media player"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "message",
                "type": "str",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Message"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            },
            {
                "name": "volume_level",
                "type": "num",
                "value": "",
                "ui": {
                    "label": {
                        "en-US": "Volume"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "num"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1600,
            "y": 140,
            "wires": [
                {
                    "id": "c029c322b1380a7b",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "bd6b3fc9fb3bede7",
        "type": "subflow",
        "name": "Hämta alla personer",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "e633149daa1a2584"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 60,
                "wires": [
                    {
                        "id": "306dae335005e8e4",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "output_persons",
                "type": "str",
                "value": "",
                "ui": {
                    "icon": "font-awesome/fa-sign-out",
                    "label": {
                        "en-US": "Persons"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str"
                        ]
                    }
                }
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "01342c3d53a6371c",
        "type": "group",
        "z": "7c1b8ecc3bcbbebd",
        "name": "Taklampa Sovrum",
        "style": {
            "label": true
        },
        "nodes": [
            "3e917487f9509efc",
            "d333661181e8ccf5",
            "973f595125b71af7",
            "3b9d4fda06291e53",
            "83cd2c752c8e4186",
            "3191172f2275f0d6"
        ],
        "x": 34,
        "y": 259,
        "w": 532,
        "h": 202
    },
    {
        "id": "178bf0b9061d0b5b",
        "type": "group",
        "z": "1f26ba8a27c1477d",
        "name": "Väggbrytare på",
        "style": {
            "label": true
        },
        "nodes": [
            "12279ce84a315168",
            "5fef2779e12e1af1",
            "8ef1e9e82c34c8b0",
            "e8f575e5dd5428a1"
        ],
        "x": 34,
        "y": 559,
        "w": 592,
        "h": 142
    },
    {
        "id": "b9ecb733de105962",
        "type": "group",
        "z": "1f26ba8a27c1477d",
        "name": "Väggbrytare av",
        "style": {
            "label": true
        },
        "nodes": [
            "3f9efcc8834f655a",
            "3394244f52a3651b",
            "192698308fb2d748",
            "30f1bd684c99b7de"
        ],
        "x": 34,
        "y": 399,
        "w": 772,
        "h": 142
    },
    {
        "id": "83c104c1e200db9f",
        "type": "group",
        "z": "1f26ba8a27c1477d",
        "name": "Tidsintervall",
        "style": {
            "label": true
        },
        "nodes": [
            "b8fe64363b5fef34",
            "189bf1e4b8b66cb4",
            "7a77cd45f5393478",
            "f011b702bd2a1309"
        ],
        "x": 34,
        "y": 239,
        "w": 372,
        "h": 142
    },
    {
        "id": "906392ec964d3dab",
        "type": "group",
        "z": "7c1b8ecc3bcbbebd",
        "name": "Vardagsrum Soffa",
        "style": {
            "label": true
        },
        "nodes": [
            "09f11ee754c3da26",
            "9e1ab61fc84c0359",
            "0a17adc6d42b515d",
            "f084ec7f3de82348",
            "32130c10373961a5",
            "d5f851c978157a9f"
        ],
        "x": 34,
        "y": 39,
        "w": 532,
        "h": 202
    },
    {
        "id": "0bb729de77f60250",
        "type": "group",
        "z": "1f26ba8a27c1477d",
        "name": "Ändra färg",
        "style": {
            "label": true
        },
        "nodes": [
            "97423d588ca97b7e",
            "0446ec6e9dda92d9"
        ],
        "x": 514,
        "y": 199,
        "w": 212,
        "h": 142
    },
    {
        "id": "832ac7f7a2975116",
        "type": "group",
        "z": "1f26ba8a27c1477d",
        "name": "Slå på nattlampa",
        "style": {
            "label": true
        },
        "nodes": [
            "307eed8904a91f77",
            "245925ea62837296"
        ],
        "x": 34,
        "y": 139,
        "w": 372,
        "h": 82
    },
    {
        "id": "8f2e68f12915ae99",
        "type": "group",
        "z": "1f26ba8a27c1477d",
        "name": "Slå av nattlampa",
        "style": {
            "label": true
        },
        "nodes": [
            "01eff572884c1d07",
            "608cb52462ac0c81",
            "7e6877fe8a6653d6"
        ],
        "x": 34,
        "y": 39,
        "w": 552,
        "h": 82
    },
    {
        "id": "657a994829f4573f",
        "type": "group",
        "z": "7c1b8ecc3bcbbebd",
        "name": "Hall 3",
        "style": {
            "label": true
        },
        "nodes": [
            "8791af0aa2f6eb95",
            "4507b1e2cb8085fc",
            "987bf4720dead3df",
            "61e8d049b688a63e",
            "e42beba3e8afcc2d",
            "3835fda3ddccfb06"
        ],
        "x": 34,
        "y": 919,
        "w": 532,
        "h": 202
    },
    {
        "id": "a41dac5adac5421d",
        "type": "group",
        "z": "7c1b8ecc3bcbbebd",
        "name": "Hall 2",
        "style": {
            "label": true
        },
        "nodes": [
            "c2c38d7f85510778",
            "3d616dfc706c76af",
            "55d2c8dd730b437c",
            "18c53d47f54bf7bf",
            "f350126776b8d2bf",
            "e2d369938e7b43be"
        ],
        "x": 34,
        "y": 699,
        "w": 532,
        "h": 202
    },
    {
        "id": "e08ca9117ba9237c",
        "type": "group",
        "z": "7c1b8ecc3bcbbebd",
        "name": "Hall Entré",
        "style": {
            "label": true
        },
        "nodes": [
            "2659e04f1506b9a4",
            "d0e4cb73260a397a",
            "b1372081cd149554",
            "80e2cae131458d2b",
            "1bf087c0a818fcbd",
            "dccec8a7a80e5d82"
        ],
        "x": 34,
        "y": 479,
        "w": 532,
        "h": 202
    },
    {
        "id": "d38d059c9d7b5a0b",
        "type": "group",
        "z": "896b946718d5907e",
        "name": "Ström",
        "style": {
            "label": true
        },
        "nodes": [
            "5470da52f33fe08a",
            "58bd23dd8dcd24ea",
            "1de41cddb747f07a",
            "c26011848a0452d9"
        ],
        "x": 14,
        "y": 19,
        "w": 692,
        "h": 122
    },
    {
        "id": "7f0fd93a794c7b06",
        "type": "group",
        "z": "896b946718d5907e",
        "name": "Frigate detektering",
        "style": {
            "label": true
        },
        "nodes": [
            "f69b707795505743",
            "323f86dd9f5cfe60",
            "31e992625650a7b3",
            "db7885a6041b1761",
            "d459f4a37575b73b",
            "8a8505f137c29f47"
        ],
        "x": 14,
        "y": 159,
        "w": 852,
        "h": 242
    },
    {
        "id": "016692fb15240c40",
        "type": "group",
        "z": "8cf7f0d9a08b3655",
        "name": "Toalett",
        "style": {
            "label": true
        },
        "nodes": [
            "67bf15aa9af16432",
            "8b1f0a4ff7923be3",
            "e70d386a804b3186"
        ],
        "x": 34,
        "y": 39,
        "w": 492,
        "h": 162
    },
    {
        "id": "a2c59dab1c39eb27",
        "type": "group",
        "z": "8cf7f0d9a08b3655",
        "name": "Badrum",
        "style": {
            "label": true
        },
        "nodes": [
            "2fe0ef961a349355",
            "a13be603a67e703a"
        ],
        "x": 34,
        "y": 219,
        "w": 492,
        "h": 82
    },
    {
        "id": "15764dd4cae9897a",
        "type": "group",
        "z": "8cf7f0d9a08b3655",
        "name": "Garderob",
        "style": {
            "label": true
        },
        "nodes": [
            "89e55bc55da527d0",
            "b9e07ea95cb6d8e1"
        ],
        "x": 34,
        "y": 319,
        "w": 512,
        "h": 82
    },
    {
        "id": "05d687da1ce7b06d",
        "type": "group",
        "z": "f6c266122b405d78",
        "name": "Inaktivera rörelsesensorer (larma hemma) när dammsugning börjar",
        "style": {
            "label": true
        },
        "nodes": [
            "2d4f29ef982ab65e",
            "8d28e6dfa1bfb9b0",
            "6d1d2435763bad74"
        ],
        "x": 34,
        "y": 39
    },
    {
        "id": "c77bf66ac0de544c",
        "type": "group",
        "z": "f6c266122b405d78",
        "name": "Aktivera larm när dammsugning klar om ingen hemma",
        "style": {
            "label": true
        },
        "nodes": [
            "0c709adc70a7b981",
            "43a51cdd1bafdc8f",
            "3f2ab8b96d1ab88c",
            "7421bc525afa4694"
        ],
        "x": 34,
        "y": 159
    },
    {
        "id": "86f8f4678672d22a",
        "type": "group",
        "z": "9d7cd8ae.f2fe48",
        "name": "Ladda secrets.yaml vid uppstart",
        "style": {
            "label": true
        },
        "nodes": [
            "24ebb2e2.2f6ffe",
            "2c59ff99.2affc",
            "9e7c7d2d.fdeb8",
            "ac0fc7a.efcc038",
            "3a583032.2662b",
            "1323cb3a16877935",
            "2b7ad1b2216adaa5"
        ],
        "x": 14,
        "y": 19
    },
    {
        "id": "60a6418e9202f91b",
        "type": "group",
        "z": "9081c37be56bc95b",
        "name": "Inaktivera larm av när man låser upp dörr",
        "style": {
            "label": true
        },
        "nodes": [
            "21fd8062b7da30b0",
            "7ea3f7423d6c9264",
            "a80517abc44a8685",
            "c1fde7221f082bde",
            "f10a3c4729976592"
        ],
        "x": 34,
        "y": 219,
        "w": 752,
        "h": 202
    },
    {
        "id": "2e59710b52d84cd4",
        "type": "group",
        "z": "9d7cd8ae.f2fe48",
        "name": "Starta om Intel NUC",
        "style": {
            "label": true
        },
        "nodes": [
            "aad95164dda26a61",
            "bc6575adb8f391d5"
        ],
        "x": 14,
        "y": 239
    },
    {
        "id": "d45aea997f43d7df",
        "type": "group",
        "z": "9d7cd8ae.f2fe48",
        "name": "Notis vid tillgänglig HA uppdatering",
        "style": {
            "label": true
        },
        "nodes": [
            "4b411ef3ab4191f7",
            "c86e931d7bf34a6d",
            "7c9eac7cf14500bf"
        ],
        "x": 14,
        "y": 339
    },
    {
        "id": "75e39dcb53bdacc7",
        "type": "group",
        "z": "9081c37be56bc95b",
        "name": "Automatisk aktivering av larm",
        "style": {
            "label": true
        },
        "nodes": [
            "0b509be3db326b86",
            "48c2925eb12eb26f",
            "626dbc36ba45a1c4"
        ],
        "x": 34,
        "y": 119,
        "w": 772,
        "h": 82
    },
    {
        "id": "f3fabdf91855700f",
        "type": "group",
        "z": "9081c37be56bc95b",
        "name": "Automatisk inaktivering av larm ",
        "style": {
            "label": true
        },
        "nodes": [
            "ae2f4571bf9c28d5",
            "7b9f40156304418e",
            "59a1364f3a5958ea"
        ],
        "x": 34,
        "y": 19,
        "w": 772,
        "h": 82
    },
    {
        "id": "819624756ad5ddb3",
        "type": "group",
        "z": "9081c37be56bc95b",
        "name": "Aktivera larm med personkod",
        "style": {
            "label": true
        },
        "nodes": [
            "d802c477e4a883f3",
            "f959494e33a8d5f0",
            "f40681a2f5d0b028",
            "6cca731ae0297214",
            "8b850efc4a432f90"
        ],
        "x": 34,
        "y": 439,
        "w": 762,
        "h": 82
    },
    {
        "id": "dbf45413091d6098",
        "type": "group",
        "z": "9081c37be56bc95b",
        "name": "Inaktivera larm med personkod",
        "style": {
            "label": true
        },
        "nodes": [
            "58d22ecab9d2941c",
            "8609e6abb78f8068",
            "7eb0434ae2b4a93a",
            "6d47bd9e0bf5c0e0",
            "1543208147c778e2"
        ],
        "x": 34,
        "y": 539,
        "w": 782,
        "h": 82
    },
    {
        "id": "66ec8226d6cd11e1",
        "type": "group",
        "z": "9081c37be56bc95b",
        "name": "Temporär failsafe",
        "style": {
            "label": true
        },
        "nodes": [
            "1b495b77b513d7da",
            "203e8450084e2033",
            "32bbbe0572b23f77",
            "5b5f16ca973f1b0e"
        ],
        "x": 34,
        "y": 639,
        "w": 752,
        "h": 82
    },
    {
        "id": "ac4a5fa8ce361c85",
        "type": "group",
        "z": "9081c37be56bc95b",
        "name": "Rök upptäckt",
        "style": {
            "label": true
        },
        "nodes": [
            "2e0513112b568dfa",
            "ee2aa044230da653"
        ],
        "x": 34,
        "y": 1159,
        "w": 372,
        "h": 82
    },
    {
        "id": "2b75c890eff44cfb",
        "type": "group",
        "z": "896b946718d5907e",
        "name": "Katt upptäckt i trädgård",
        "style": {
            "label": true
        },
        "nodes": [
            "3fc508453f5a4bf3",
            "1f21716b9f95f12a"
        ],
        "x": 14,
        "y": 419,
        "w": 372,
        "h": 82
    },
    {
        "id": "7f13b2d75f7cc15f",
        "type": "group",
        "z": "7f81ec7457fe49ea",
        "name": "Inaktivera TTS inom viss tidsspann",
        "style": {
            "label": true
        },
        "nodes": [
            "7c4a2c32df048562",
            "75421ea3e1257808",
            "013f788a0fdefbef",
            "382b9c2d249ca286"
        ],
        "x": 54,
        "y": 39
    },
    {
        "id": "cfe233eb2dabcf76",
        "type": "group",
        "z": "7f81ec7457fe49ea",
        "name": "Wifi",
        "style": {
            "label": true
        },
        "nodes": [
            "0634c713d7c382b4",
            "44db05102350bff2"
        ],
        "x": 48,
        "y": 193
    },
    {
        "id": "bef63f036ef05e26",
        "type": "group",
        "z": "7f81ec7457fe49ea",
        "name": "Tvättmaskin klar",
        "style": {
            "label": true
        },
        "nodes": [
            "9a4d8e04d32ec0e5",
            "a9d8c044c5a33e66"
        ],
        "x": 54,
        "y": 439
    },
    {
        "id": "997af72d18e55a49",
        "type": "group",
        "z": "7f81ec7457fe49ea",
        "name": "Ytterdörr öppen i 5 min",
        "style": {
            "label": true
        },
        "nodes": [
            "c54677c2173b9501",
            "ac1fd26cc03af2dc"
        ],
        "x": 54,
        "y": 639
    },
    {
        "id": "ea9720dad10ae7bd",
        "type": "group",
        "z": "9081c37be56bc95b",
        "name": "Larm Notifikation action",
        "style": {
            "label": true
        },
        "nodes": [
            "daf827e5ff247e6a",
            "283aacb4926f7f3b",
            "06737b5b192a39a8",
            "71e1f5cac1cb11c5",
            "67d1083ee5ac4427",
            "7bfda30ac040bd4c"
        ],
        "x": 34,
        "y": 739,
        "w": 1052,
        "h": 162
    },
    {
        "id": "ca425b51ea70d657",
        "type": "group",
        "z": "59b6382f2b4b4619",
        "name": "Vardagsrum",
        "style": {
            "label": true
        },
        "nodes": [
            "e0ef91ffabc79baa",
            "733c04aaaa75aef8",
            "dd89f3d78cc0ddc4"
        ],
        "x": 34,
        "y": 39
    },
    {
        "id": "8d64418785067593",
        "type": "group",
        "z": "59b6382f2b4b4619",
        "name": "Sovrum",
        "style": {
            "label": true
        },
        "nodes": [
            "108711782342764d",
            "6a811b5ff4e50888",
            "145e4d491c2bf0e8",
            "881e055aefec352a",
            "5a752c4a7ee2bb9a",
            "6bfc01e7166f0255",
            "1c6e050d5d9776e4"
        ],
        "x": 34,
        "y": 159
    },
    {
        "id": "00a032e1b75fa8ed",
        "type": "group",
        "z": "896b946718d5907e",
        "name": "Dinos kamera tillgänlig",
        "style": {
            "label": true
        },
        "nodes": [
            "eba99b674a6786c2",
            "0785c72b9a19417f",
            "04270f65108df369"
        ],
        "x": 14,
        "y": 539,
        "w": 572,
        "h": 142
    },
    {
        "id": "87f9c3202c8c5ccc",
        "type": "group",
        "z": "cd9a5746e1f519c9",
        "name": "Notis till albin när matilda lämnar jobb",
        "style": {
            "label": true
        },
        "nodes": [
            "8dd22f7676bd5610",
            "ccfee6fd12b97e52",
            "4dbb2d100e9c7495"
        ],
        "x": 34,
        "y": 39
    },
    {
        "id": "a2a2c7d13b2d1495",
        "type": "group",
        "z": "9d7cd8ae.f2fe48",
        "name": "Notis vid tillgänglig HACS uppdatering",
        "style": {
            "label": true
        },
        "nodes": [
            "f876c5ceabd6750a",
            "f3ed7dd986d07d37",
            "0b4e37880bc471a9"
        ],
        "x": 14,
        "y": 499
    },
    {
        "id": "50b6ce68ea1dbe94",
        "type": "group",
        "z": "cd9a5746e1f519c9",
        "name": "Välkomna personen som kommer hem",
        "style": {
            "label": true
        },
        "nodes": [
            "80edc5eabfbb154b",
            "e5154d67fa33cfb1",
            "28480c50575baa3f",
            "15964651208c3bfe",
            "dbb164dc10673f73",
            "d5236c0e8b8eb513",
            "9e24eaa95fb2667a"
        ],
        "x": 34,
        "y": 139
    },
    {
        "id": "9acaa0666b5b68d6",
        "type": "group",
        "z": "7f81ec7457fe49ea",
        "name": "AirFryer klar",
        "style": {
            "label": true
        },
        "nodes": [
            "09eb4ce045377709",
            "e7cf591bc8ae49b7"
        ],
        "x": 54,
        "y": 539
    },
    {
        "id": "2c760ae190629011",
        "type": "group",
        "z": "9081c37be56bc95b",
        "name": "Aktivera scen \"Inte hemma\" när alla lämnat hemmet",
        "style": {
            "label": true
        },
        "nodes": [
            "72cf3dd514774f5f",
            "6addbb6abca1c9c1"
        ],
        "x": 34,
        "y": 1059,
        "w": 552,
        "h": 82
    },
    {
        "id": "0634c713d7c382b4",
        "type": "group",
        "z": "7f81ec7457fe49ea",
        "g": "cfe233eb2dabcf76",
        "name": "Wifi återfådd",
        "style": {
            "label": true
        },
        "nodes": [
            "e817e7770e87a376",
            "56c6103e9c8baab5"
        ],
        "x": 74,
        "y": 319
    },
    {
        "id": "44db05102350bff2",
        "type": "group",
        "z": "7f81ec7457fe49ea",
        "g": "cfe233eb2dabcf76",
        "name": "Wifi tappad",
        "style": {
            "label": true
        },
        "nodes": [
            "2d08fecae482dcf5",
            "ba50e8a79539d91d"
        ],
        "x": 74,
        "y": 219
    },
    {
        "id": "0dae13e1d2f37ed0",
        "type": "group",
        "z": "9081c37be56bc95b",
        "name": "Skicka notis vid utlöst larm",
        "style": {
            "label": true
        },
        "nodes": [
            "694decc229ffefc0",
            "8ae24a3cefea69b6",
            "960bfb8e4169253b",
            "ada400995e3d7452",
            "28b7e3190283b558",
            "f7768fbab71ef429"
        ],
        "x": 34,
        "y": 919,
        "w": 1032,
        "h": 122
    },
    {
        "id": "9ddcbb1e73030798",
        "type": "junction",
        "z": "6be012d64f25f43f",
        "x": 480,
        "y": 120,
        "wires": [
            [
                "91d07763eee29f9f"
            ]
        ]
    },
    {
        "id": "91d07763eee29f9f",
        "type": "junction",
        "z": "6be012d64f25f43f",
        "x": 1000,
        "y": 120,
        "wires": [
            [
                "77312eb671db8184"
            ]
        ]
    },
    {
        "id": "7b567172d270dada",
        "type": "junction",
        "z": "17f3c422bcd5a1fb",
        "x": 1340,
        "y": 120,
        "wires": [
            [
                "665eda0df34dc544",
                "c029c322b1380a7b"
            ]
        ]
    },
    {
        "id": "05ae649663b26e09",
        "type": "junction",
        "z": "ad0b3a8015e7f49b",
        "x": 1340,
        "y": 120,
        "wires": [
            [
                "4bd83ca5e99a297a",
                "130a97d040fd0f62"
            ]
        ]
    },
    {
        "id": "e9739673.bbfed8",
        "type": "server",
        "name": "Home Assistant",
        "addon": true
    },
    {
        "id": "b46e7e0a.fef1f",
        "type": "switch",
        "z": "5da5355c5d6e8223",
        "name": "is running",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "running",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b66320a5.f8586",
        "type": "server-events",
        "z": "5da5355c5d6e8223",
        "name": "Home Assistant Client Event",
        "server": "e9739673.bbfed8",
        "version": 2,
        "eventType": "home_assistant_client",
        "exposeToHomeAssistant": false,
        "eventData": "",
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "waitForRunning": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            },
            {
                "property": "event_type",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            }
        ],
        "x": 160,
        "y": 60,
        "wires": [
            [
                "b46e7e0a.fef1f"
            ]
        ]
    },
    {
        "id": "03d0855aa7570e8d",
        "type": "server-state-changed",
        "z": "5c7f108f494183f7",
        "name": "En person hemma",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "zone.home",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "num",
        "haltifstate": "1",
        "halt_if_type": "num",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            }
        ],
        "x": 130,
        "y": 60,
        "wires": [
            [
                "22f343fdacc17007"
            ],
            []
        ]
    },
    {
        "id": "cce4e66bf72f0f15",
        "type": "function",
        "z": "5c7f108f494183f7",
        "name": "Hämta person som kom hem",
        "func": "const old_persons = msg.data.old_state.attributes.persons;\nconst new_persons = msg.data.new_state.attributes.persons;\n\nconst person = new_persons.filter(p => !old_persons.includes(p))[0];\n\nreturn {\n    person\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 60,
        "wires": [
            [
                "bb71c5a1e7a3f063",
                "8ba3ed2570504118"
            ]
        ]
    },
    {
        "id": "ebe77296e60e8877",
        "type": "switch",
        "z": "5c7f108f494183f7",
        "name": "Tidigare tillstånd var 0",
        "property": "data.old_state.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 500,
        "y": 60,
        "wires": [
            [
                "cce4e66bf72f0f15"
            ]
        ]
    },
    {
        "id": "bb71c5a1e7a3f063",
        "type": "function",
        "z": "5c7f108f494183f7",
        "name": "Skapa status",
        "func": "const text = msg.topic;\n\nreturn {\n    payload: {\n        fill: \"green\",\n        text\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 970,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "22f343fdacc17007",
        "type": "function",
        "z": "5c7f108f494183f7",
        "name": "setup",
        "func": "// Define inputs\nconst env_keys = [];\n\n// Where should the parsed inputs be stored during the subflow\nconst storage = 'flow_storage';\n\n// Save the msg\nflow.set('input_msg', JSON.stringify(msg));\n\nmsg[storage] = {};\n\n// Check if string contains mustache\nconst containsMustache = (str) => {\n    const regex = /{{(?:(?!}}).+)}}/g;\n    return regex.test(str);\n}\n\n// Parse inputs\nenv_keys.forEach((env_key) => {\n    let env_value = env.get(env_key);\n    if (containsMustache(env_value)) {\n        env_value = env_value.replace(/(\\{{)\\s*(\\S+)\\s*(\\}})/g, \"$2\");\n        env_value = selectn(env_value, msg);\n    }\n    msg[storage][env_key] = env_value;\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 310,
        "y": 60,
        "wires": [
            [
                "ebe77296e60e8877"
            ]
        ]
    },
    {
        "id": "8ba3ed2570504118",
        "type": "function",
        "z": "5c7f108f494183f7",
        "name": "cleanup",
        "func": "// Define outputs\n// * Key - environment variable\n// * Value - msg path to value\nconst outputs = {\n    'output_person': 'person'\n};\n\nconst buildObjWithValue = (path, value = '') => {\n    const paths = path.split('.');\n    return paths.reduceRight((acc, item, index) => ({\n        [item]: index === paths.length - 1\n            ? value\n            : acc\n    }), {});\n}\n\n// Set output variables\nconst output_values = {};\nObject.keys(outputs).forEach((output_key) => {\n    const output_value_path = outputs[output_key];\n    const output_value_location = env.get(output_key);\n    const output_value = selectn(output_value_path, msg)\n    if (output_value_location && output_value_location !== \"\") {\n        Object.assign(output_values, buildObjWithValue(output_value_location, output_value));\n    }\n});\n\n// Load the msg as the input was to the subflow\nconst pre_msg = JSON.parse(flow.get('input_msg'));\n\n// Return the input message alongside the outputs\nmsg = Object.assign(pre_msg, output_values);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 980,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7f06673b2261b535",
        "type": "comment",
        "z": "5c7f108f494183f7",
        "name": "Injector, inget pre_msg behövs",
        "info": "",
        "x": 650,
        "y": 20,
        "wires": []
    },
    {
        "id": "1460052b763787b4",
        "type": "server-state-changed",
        "z": "10bf6a612840df6b",
        "name": "Ingen person hemma",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "zone.home",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "num",
        "haltifstate": "0",
        "halt_if_type": "num",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 60,
        "wires": [
            [
                "cca8176dfb811e96"
            ],
            []
        ]
    },
    {
        "id": "16f07124f699c070",
        "type": "function",
        "z": "10bf6a612840df6b",
        "name": "Hämta person som lämnade",
        "func": "const old_persons = msg.data.old_state.attributes.persons;\nconst new_persons = msg.data.new_state.attributes.persons;\n\nconst person = old_persons.filter(p => !new_persons.includes(p))[0];\n\nreturn {\n    person\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 60,
        "wires": [
            [
                "a008fb2ad1c74bdc",
                "63aa7075ace1ec06"
            ]
        ]
    },
    {
        "id": "a008fb2ad1c74bdc",
        "type": "function",
        "z": "10bf6a612840df6b",
        "name": "Skapa status",
        "func": "const text = msg.topic;\n\nreturn {\n    payload: {\n        fill: \"green\",\n        text\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "cca8176dfb811e96",
        "type": "function",
        "z": "10bf6a612840df6b",
        "name": "setup",
        "func": "// Define inputs\nconst env_keys = ['media_player', 'message'];\n\n// Where should the parsed inputs be stored during the subflow\nconst storage = 'flow_storage';\n\n// Save the msg\nflow.set('input_msg', JSON.stringify(msg));\n\nmsg[storage] = {};\n\n// Check if string contains mustache\nconst containsMustache = (str) => {\n    const regex = /{{(?:(?!}}).+)}}/g;\n    return regex.test(str);\n}\n\n// Parse inputs\nenv_keys.forEach((env_key) => {\n    let env_value = env.get(env_key);\n    if (containsMustache(env_value)) {\n        env_value = env_value.replace(/(\\{{)\\s*(\\S+)\\s*(\\}})/g, \"$2\");\n        env_value = selectn(env_value, msg);\n    }\n    msg[storage][env_key] = env_value;\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 330,
        "y": 60,
        "wires": [
            [
                "16f07124f699c070"
            ]
        ]
    },
    {
        "id": "63aa7075ace1ec06",
        "type": "function",
        "z": "10bf6a612840df6b",
        "name": "cleanup",
        "func": "// Define outputs\n// * Key - environment variable\n// * Value - msg path to value\nconst outputs = {\n    'output_person': 'person'\n};\n\nconst buildObjWithValue = (path, value = '') => {\n    const paths = path.split('.');\n    return paths.reduceRight((acc, item, index) => ({\n        [item]: index === paths.length - 1\n            ? value\n            : acc\n    }), {});\n}\n\n// Set output variables\nconst output_values = {};\nObject.keys(outputs).forEach((output_key) => {\n    const output_value_path = outputs[output_key];\n    const output_value_location = env.get(output_key);\n    const output_value = selectn(output_value_path, msg)\n    if (output_value_location && output_value_location !== \"\") {\n        Object.assign(output_values, buildObjWithValue(output_value_location, output_value));\n    }\n});\n\n// Load the msg as the input was to the subflow\nconst pre_msg = JSON.parse(flow.get('input_msg'));\n\n// Return the input message alongside the outputs\nmsg = Object.assign(pre_msg, output_values);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 760,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "43b871a024add46b",
        "type": "comment",
        "z": "10bf6a612840df6b",
        "name": "Injector, inget pre_msg behövs",
        "info": "",
        "x": 610,
        "y": 20,
        "wires": []
    },
    {
        "id": "9bd3102eea3f4d99",
        "type": "ha-get-entities",
        "z": "92acfb4d26effac0",
        "name": "Hämta personer hemma",
        "server": "e9739673.bbfed8",
        "version": 0,
        "rules": [
            {
                "property": "entity_id",
                "logic": "is",
                "value": "person\\.",
                "valueType": "re"
            },
            {
                "property": "state",
                "logic": "is",
                "value": "home",
                "valueType": "str"
            }
        ],
        "output_type": "array",
        "output_empty_results": true,
        "output_location_type": "msg",
        "output_location": "person_entities",
        "output_results_count": 1,
        "x": 370,
        "y": 60,
        "wires": [
            [
                "0df834b2ca539f6c"
            ]
        ]
    },
    {
        "id": "0df834b2ca539f6c",
        "type": "function",
        "z": "92acfb4d26effac0",
        "name": "Plocka ut entity ids",
        "func": "const person_entity_ids = msg.person_entities.map((person) => person.entity_id);\n\nreturn {\n    persons: person_entity_ids\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 60,
        "wires": [
            [
                "6a9480372530925d",
                "229ceb6c0a1113fd"
            ]
        ]
    },
    {
        "id": "6a9480372530925d",
        "type": "function",
        "z": "92acfb4d26effac0",
        "name": "Skapa status",
        "func": "const color = msg.persons.length > 0 ? \"green\": \"red\";\nconst text = msg.persons.join(', ')\n\nreturn {\n    payload: {\n        fill: color,\n        text\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "efa87fa685b4707b",
        "type": "function",
        "z": "92acfb4d26effac0",
        "name": "setup",
        "func": "// Define inputs\nconst env_keys = [];\n\n// Where should the parsed inputs be stored during the subflow\nconst storage = 'flow_storage';\n\n// Save the msg\nflow.set('input_msg', JSON.stringify(msg));\n\nmsg[storage] = {};\n\n// Check if string contains mustache\nconst containsMustache = (str) => {\n    const regex = /{{(?:(?!}}).+)}}/g;\n    return regex.test(str);\n}\n\n// Parse inputs\nenv_keys.forEach((env_key) => {\n    let env_value = env.get(env_key);\n    if (containsMustache(env_value)) {\n        env_value = env_value.replace(/(\\{{)\\s*(\\S+)\\s*(\\}})/g, \"$2\");\n        env_value = selectn(env_value, msg);\n    }\n    msg[storage][env_key] = env_value;\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 170,
        "y": 60,
        "wires": [
            [
                "9bd3102eea3f4d99"
            ]
        ]
    },
    {
        "id": "229ceb6c0a1113fd",
        "type": "function",
        "z": "92acfb4d26effac0",
        "name": "cleanup",
        "func": "// Define outputs\n// * Key - environment variable\n// * Value - msg path to value\nconst outputs = {\n    'output_persons': 'persons'\n};\n\nconst buildObjWithValue = (path, value = '') => {\n    const paths = path.split('.');\n    return paths.reduceRight((acc, item, index) => ({\n        [item]: index === paths.length - 1\n            ? value\n            : acc\n    }), {});\n}\n\n// Set output variables\nconst output_values = {};\nObject.keys(outputs).forEach((output_key) => {\n    const output_value_path = outputs[output_key];\n    const output_value_location = env.get(output_key);\n    const output_value = selectn(output_value_path, msg)\n    if (output_value_location && output_value_location !== \"\") {\n        Object.assign(output_values, buildObjWithValue(output_value_location, output_value));\n    }\n});\n\n// Load the msg as the input was to the subflow\nconst pre_msg = JSON.parse(flow.get('input_msg'));\n\n// Return the input message alongside the outputs\nmsg = Object.assign(pre_msg, output_values);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 800,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "01e5dd44dbf610fc",
        "type": "ha-get-entities",
        "z": "29024697abc79029",
        "name": "Hämta personer inte hemma",
        "server": "e9739673.bbfed8",
        "version": 0,
        "rules": [
            {
                "property": "entity_id",
                "logic": "is",
                "value": "person\\.",
                "valueType": "re"
            },
            {
                "property": "state",
                "logic": "is_not",
                "value": "home",
                "valueType": "str"
            }
        ],
        "output_type": "array",
        "output_empty_results": true,
        "output_location_type": "msg",
        "output_location": "person_entities",
        "output_results_count": 1,
        "x": 380,
        "y": 60,
        "wires": [
            [
                "df7bbd1b6e50d3e2"
            ]
        ]
    },
    {
        "id": "df7bbd1b6e50d3e2",
        "type": "function",
        "z": "29024697abc79029",
        "name": "Plocka ut entity ids",
        "func": "const person_entity_ids = msg.person_entities.map((person) => person.entity_id);\n\nreturn {\n    ...msg,\n    persons: person_entity_ids\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 630,
        "y": 60,
        "wires": [
            [
                "781785e263a6d008",
                "b99d4f8b51752826"
            ]
        ]
    },
    {
        "id": "781785e263a6d008",
        "type": "function",
        "z": "29024697abc79029",
        "name": "Skapa status",
        "func": "const color = msg.persons.length > 0 ? \"green\": \"red\";\nconst text = msg.persons.join(', ')\n\nreturn {\n    payload: {\n        fill: color,\n        text\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "581c28f951e7c8b8",
        "type": "function",
        "z": "29024697abc79029",
        "name": "setup",
        "func": "// Define inputs\nconst env_keys = [];\n\n// Where should the parsed inputs be stored during the subflow\nconst storage = 'flow_storage';\n\n// Save the msg\nflow.set('input_msg', JSON.stringify(msg));\n\nmsg[storage] = {};\n\n// Check if string contains mustache\nconst containsMustache = (str) => {\n    const regex = /{{(?:(?!}}).+)}}/g;\n    return regex.test(str);\n}\n\n// Parse inputs\nenv_keys.forEach((env_key) => {\n    let env_value = env.get(env_key);\n    if (containsMustache(env_value)) {\n        env_value = env_value.replace(/(\\{{)\\s*(\\S+)\\s*(\\}})/g, \"$2\");\n        env_value = selectn(env_value, msg);\n    }\n    msg[storage][env_key] = env_value;\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 170,
        "y": 60,
        "wires": [
            [
                "01e5dd44dbf610fc"
            ]
        ]
    },
    {
        "id": "b99d4f8b51752826",
        "type": "function",
        "z": "29024697abc79029",
        "name": "cleanup",
        "func": "// Define outputs\n// * Key - environment variable\n// * Value - msg path to value\nconst outputs = {\n    'output_persons': 'persons'\n};\n\nconst buildObjWithValue = (path, value = '') => {\n    const paths = path.split('.');\n    return paths.reduceRight((acc, item, index) => ({\n        [item]: index === paths.length - 1\n            ? value\n            : acc\n    }), {});\n}\n\n// Set output variables\nconst output_values = {};\nObject.keys(outputs).forEach((output_key) => {\n    const output_value_path = outputs[output_key];\n    const output_value_location = env.get(output_key);\n    const output_value = selectn(output_value_path, msg)\n    if (output_value_location && output_value_location !== \"\") {\n        Object.assign(output_values, buildObjWithValue(output_value_location, output_value));\n    }\n});\n\n// Load the msg as the input was to the subflow\nconst pre_msg = JSON.parse(flow.get('input_msg'));\n\n// Return the input message alongside the outputs\nmsg = Object.assign(pre_msg, output_values);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 820,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "b097d3315ee03c10",
        "type": "function",
        "z": "9577215509c764c6",
        "name": "Hämta notify service",
        "func": "const storage = 'flow_storage';\n\nconst person_entity_id = msg[storage].person;\nconst person_name = person_entity_id.split('.')[1];\n\nconst service = `mobile_app_${person_name}_iphone`;\nconst data = msg[storage].notify_data\n\nmsg['payload'] = { service, data };\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 60,
        "wires": [
            [
                "5e64db703b93910a"
            ]
        ]
    },
    {
        "id": "8b7d6855d09b0533",
        "type": "function",
        "z": "9577215509c764c6",
        "name": "Skapa status",
        "func": "const text = msg.payload.service\n\nreturn {\n    payload: {\n        fill: \"green\",\n        text\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "c5877a07df0c2c4a",
        "type": "function",
        "z": "9577215509c764c6",
        "name": "setup",
        "func": "// Define inputs\nconst env_keys = ['person', 'notify_data'];\n\n// Where should the parsed inputs be stored during the subflow\nconst storage = 'flow_storage';\n\n// Save the msg\nflow.set('input_msg', JSON.stringify(msg));\n\nmsg[storage] = {};\n\n// Check if string contains mustache\nconst containsMustache = (str) => {\n    const regex = /{{(?:(?!}}).+)}}/g;\n    return regex.test(str);\n}\n\n// Parse inputs\nenv_keys.forEach((env_key) => {\n    let env_value = env.get(env_key);\n    if (containsMustache(env_value)) {\n        env_value = env_value.replace(/(\\{{)\\s*(\\S+)\\s*(\\}})/g, \"$2\");\n        env_value = selectn(env_value, msg);\n    }\n    msg[storage][env_key] = env_value;\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 170,
        "y": 60,
        "wires": [
            [
                "b097d3315ee03c10"
            ]
        ]
    },
    {
        "id": "d979026fdf4f7bf0",
        "type": "function",
        "z": "9577215509c764c6",
        "name": "cleanup",
        "func": "// Define outputs\n// * Key - environment variable\n// * Value - msg path to value\nconst outputs = {\n    'output_notify_service': 'payload.service'\n};\n\nconst buildObjWithValue = (path, value = '') => {\n    const paths = path.split('.');\n    return paths.reduceRight((acc, item, index) => ({\n        [item]: index === paths.length - 1\n            ? value\n            : acc\n    }), {});\n}\n\n// Set output variables\nconst output_values = {};\nObject.keys(outputs).forEach((output_key) => {\n    const output_value_path = outputs[output_key];\n    const output_value_location = env.get(output_key);\n    const output_value = selectn(output_value_path, msg)\n    if (output_value_location && output_value_location !== \"\") {\n        Object.assign(output_values, buildObjWithValue(output_value_location, output_value));\n    }\n});\n\n// Load the msg as the input was to the subflow\nconst pre_msg = JSON.parse(flow.get('input_msg'));\n\n// Return the input message alongside the outputs\nmsg = Object.assign(pre_msg, output_values);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 740,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "5e64db703b93910a",
        "type": "api-call-service",
        "z": "9577215509c764c6",
        "name": "Skicka notis",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 570,
        "y": 60,
        "wires": [
            [
                "d979026fdf4f7bf0",
                "8b7d6855d09b0533"
            ]
        ]
    },
    {
        "id": "d4f28161858d8840",
        "type": "function",
        "z": "6be012d64f25f43f",
        "name": "För varje person",
        "func": "const storage = 'flow_storage1';\n\nconst persons = msg[storage].persons;\nif(persons.length > 0) {\n    persons.forEach((person, index) => {\n        node.send({\n            ...msg,\n            person,\n            parts: {\n                id: \"notify_persons\",\n                type: \"array\",\n                count: persons.length,\n                len: 1,\n                index\n            }\n        });\n    });\n}\n\nreturn [null, {services: []}]\n",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 60,
        "wires": [
            [
                "739e21e164f8a279"
            ],
            [
                "9ddcbb1e73030798"
            ]
        ],
        "outputLabels": [
            "",
            "no persons"
        ]
    },
    {
        "id": "739e21e164f8a279",
        "type": "subflow:9577215509c764c6",
        "z": "6be012d64f25f43f",
        "name": "",
        "env": [
            {
                "name": "person",
                "value": "{{ person }}",
                "type": "str"
            },
            {
                "name": "notify_data",
                "value": "{{ flow_storage1.notify_data }}",
                "type": "str"
            },
            {
                "name": "output_notify_service",
                "value": "service",
                "type": "str"
            }
        ],
        "x": 560,
        "y": 60,
        "wires": [
            [
                "b53ff6641760cd5b"
            ]
        ]
    },
    {
        "id": "b53ff6641760cd5b",
        "type": "join",
        "z": "6be012d64f25f43f",
        "name": "",
        "mode": "auto",
        "build": "array",
        "property": "",
        "propertyType": "full",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 750,
        "y": 60,
        "wires": [
            [
                "72b4bab712e13952"
            ]
        ]
    },
    {
        "id": "024de54230752dc1",
        "type": "function",
        "z": "6be012d64f25f43f",
        "name": "Skapa status",
        "func": "const text = msg.services.join(', ')\n\nreturn {\n    payload: {\n        fill: \"green\",\n        text\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "bafa2d49610af115",
        "type": "function",
        "z": "6be012d64f25f43f",
        "name": "setup",
        "func": "// Define inputs\nconst env_keys = ['persons', 'notify_data'];\n\n// Where should the parsed inputs be stored during the subflow\nconst storage = 'flow_storage1';\n\n// Save the msg\nflow.set('input_msg', JSON.stringify(msg));\n\nmsg[storage] = {};\n\n// Check if string contains mustache\nconst containsMustache = (str) => {\n    const regex = /{{(?:(?!}}).+)}}/g;\n    return regex.test(str);\n}\n\n// Parse inputs\nenv_keys.forEach((env_key) => {\n    let env_value = env.get(env_key);\n    if (containsMustache(env_value)) {\n        env_value = env_value.replace(/(\\{{)\\s*(\\S+)\\s*(\\}})/g, \"$2\");\n        env_value = selectn(env_value, msg);\n    }\n    msg[storage][env_key] = env_value;\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 170,
        "y": 60,
        "wires": [
            [
                "d4f28161858d8840"
            ]
        ]
    },
    {
        "id": "77312eb671db8184",
        "type": "function",
        "z": "6be012d64f25f43f",
        "name": "cleanup",
        "func": "// Define outputs\n// * Key - environment variable\n// * Value - msg path to value\nconst outputs = {\n    'output_notify_services': 'services'\n};\n\nconst buildObjWithValue = (path, value = '') => {\n    const paths = path.split('.');\n    return paths.reduceRight((acc, item, index) => ({\n        [item]: index === paths.length - 1\n            ? value\n            : acc\n    }), {});\n}\n\n// Set output variables\nconst output_values = {};\nObject.keys(outputs).forEach((output_key) => {\n    const output_value_path = outputs[output_key];\n    const output_value_location = env.get(output_key);\n    const output_value = selectn(output_value_path, msg)\n    if (output_value_location && output_value_location !== \"\") {\n        Object.assign(output_values, buildObjWithValue(output_value_location, output_value));\n    }\n});\n\n// Load the msg as the input was to the subflow\nconst pre_msg = JSON.parse(flow.get('input_msg'));\n\n// Return the input message alongside the outputs\nmsg = Object.assign(pre_msg, output_values);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 1140,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "72b4bab712e13952",
        "type": "function",
        "z": "6be012d64f25f43f",
        "name": "Slå samman services",
        "func": "\nreturn {\n    ...msg,\n    services: msg.payload.map((payload) => payload.service)\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 60,
        "wires": [
            [
                "77312eb671db8184",
                "024de54230752dc1"
            ]
        ]
    },
    {
        "id": "6778bbce2e781dc2",
        "type": "subflow:92acfb4d26effac0",
        "z": "c0dcc6a2aeb58851",
        "name": "",
        "env": [
            {
                "name": "output_persons",
                "value": "persons",
                "type": "str"
            }
        ],
        "x": 370,
        "y": 60,
        "wires": [
            [
                "d22c0752c41e771d"
            ]
        ]
    },
    {
        "id": "d22c0752c41e771d",
        "type": "subflow:6be012d64f25f43f",
        "z": "c0dcc6a2aeb58851",
        "name": "Skicka notis till personer",
        "env": [
            {
                "name": "persons",
                "value": "{{ persons }}",
                "type": "str"
            },
            {
                "name": "notify_data",
                "value": "{{ flow_storage2.notify_data }}",
                "type": "str"
            },
            {
                "name": "output_notify_services",
                "value": "services",
                "type": "str"
            }
        ],
        "x": 630,
        "y": 60,
        "wires": [
            [
                "6fec81bf15051b42",
                "aec726546392d501"
            ]
        ]
    },
    {
        "id": "6fec81bf15051b42",
        "type": "function",
        "z": "c0dcc6a2aeb58851",
        "name": "Skapa status",
        "func": "let text = 'No persons home';\nlet color = 'red';\n\nif (msg.services.length > 0) {\n    text = msg.services.join(', ');\n    color = 'green';\n}\n\nreturn {\n    payload: {\n        fill: color,\n        text\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 830,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e5c1510d1f6ac359",
        "type": "function",
        "z": "c0dcc6a2aeb58851",
        "name": "setup",
        "func": "// Define inputs\nconst env_keys = ['persons', 'notify_data'];\n\n// Where should the parsed inputs be stored during the subflow\nconst storage = 'flow_storage2';\n\n// Save the msg\nflow.set('input_msg', JSON.stringify(msg));\n\nmsg[storage] = {};\n\n// Check if string contains mustache\nconst containsMustache = (str) => {\n    const regex = /{{(?:(?!}}).+)}}/g;\n    return regex.test(str);\n}\n\n// Parse inputs\nenv_keys.forEach((env_key) => {\n    let env_value = env.get(env_key);\n    if (containsMustache(env_value)) {\n        env_value = env_value.replace(/(\\{{)\\s*(\\S+)\\s*(\\}})/g, \"$2\");\n        env_value = selectn(env_value, msg);\n    }\n    msg[storage][env_key] = env_value;\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 170,
        "y": 60,
        "wires": [
            [
                "6778bbce2e781dc2"
            ]
        ]
    },
    {
        "id": "aec726546392d501",
        "type": "function",
        "z": "c0dcc6a2aeb58851",
        "name": "cleanup",
        "func": "// Define outputs\n// * Key - environment variable\n// * Value - msg path to value\nconst outputs = {\n    'output_notify_services': 'services',\n    'output_persons': 'persons'\n};\n\nconst buildObjWithValue = (path, value = '') => {\n    const paths = path.split('.');\n    return paths.reduceRight((acc, item, index) => ({\n        [item]: index === paths.length - 1\n            ? value\n            : acc\n    }), {});\n}\n\n// Set output variables\nconst output_values = {};\nObject.keys(outputs).forEach((output_key) => {\n    const output_value_path = outputs[output_key];\n    const output_value_location = env.get(output_key);\n    const output_value = selectn(output_value_path, msg)\n    if (output_value_location && output_value_location !== \"\") {\n        Object.assign(output_values, buildObjWithValue(output_value_location, output_value));\n    }\n});\n\n// Load the msg as the input was to the subflow\nconst pre_msg = JSON.parse(flow.get('input_msg'));\n\n// Return the input message alongside the outputs\nmsg = Object.assign(pre_msg, output_values);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 840,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c8f1b8fba6b56112",
        "type": "subflow:29024697abc79029",
        "z": "362c301346dfdfcc",
        "name": "",
        "env": [
            {
                "name": "output_persons",
                "value": "persons",
                "type": "str"
            }
        ],
        "x": 360,
        "y": 60,
        "wires": [
            [
                "e13a65ea718ca707"
            ]
        ]
    },
    {
        "id": "e13a65ea718ca707",
        "type": "subflow:6be012d64f25f43f",
        "z": "362c301346dfdfcc",
        "name": "Skicka notis till personer",
        "env": [
            {
                "name": "persons",
                "value": "{{ persons }}",
                "type": "str"
            },
            {
                "name": "notify_data",
                "value": "{{ flow_storage2.notify_data }}",
                "type": "str"
            },
            {
                "name": "output_notify_services",
                "value": "services",
                "type": "str"
            }
        ],
        "x": 610,
        "y": 60,
        "wires": [
            [
                "58e5fe0c3317d285",
                "30817a201e9a8b5e"
            ]
        ]
    },
    {
        "id": "58e5fe0c3317d285",
        "type": "function",
        "z": "362c301346dfdfcc",
        "name": "Skapa status",
        "func": "let text = 'No persons away';\nlet color = 'red';\n\nif (msg.services.length > 0) {\n    text = msg.services.join(', ');\n    color = 'green';\n}\n\nreturn {\n    payload: {\n        fill: color,\n        text\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 810,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "c3925d7dd6da7909",
        "type": "function",
        "z": "362c301346dfdfcc",
        "name": "setup",
        "func": "// Define inputs\nconst env_keys = ['persons', 'notify_data'];\n\n// Where should the parsed inputs be stored during the subflow\nconst storage = 'flow_storage2';\n\n// Save the msg\nflow.set('input_msg', JSON.stringify(msg));\n\nmsg[storage] = {};\n\n// Check if string contains mustache\nconst containsMustache = (str) => {\n    const regex = /{{(?:(?!}}).+)}}/g;\n    return regex.test(str);\n}\n\n// Parse inputs\nenv_keys.forEach((env_key) => {\n    let env_value = env.get(env_key);\n    if (containsMustache(env_value)) {\n        env_value = env_value.replace(/(\\{{)\\s*(\\S+)\\s*(\\}})/g, \"$2\");\n        env_value = selectn(env_value, msg);\n    }\n    msg[storage][env_key] = env_value;\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 170,
        "y": 60,
        "wires": [
            [
                "c8f1b8fba6b56112"
            ]
        ]
    },
    {
        "id": "30817a201e9a8b5e",
        "type": "function",
        "z": "362c301346dfdfcc",
        "name": "cleanup",
        "func": "// Define outputs\n// * Key - environment variable\n// * Value - msg path to value\nconst outputs = {\n    'output_notify_services': 'services',\n    'output_persons': 'persons'\n};\n\nconst buildObjWithValue = (path, value = '') => {\n    const paths = path.split('.');\n    return paths.reduceRight((acc, item, index) => ({\n        [item]: index === paths.length - 1\n            ? value\n            : acc\n    }), {});\n}\n\n// Set output variables\nconst output_values = {};\nObject.keys(outputs).forEach((output_key) => {\n    const output_value_path = outputs[output_key];\n    const output_value_location = env.get(output_key);\n    const output_value = selectn(output_value_path, msg)\n    if (output_value_location && output_value_location !== \"\") {\n        Object.assign(output_values, buildObjWithValue(output_value_location, output_value));\n    }\n});\n\nconsole.log(flow.get('input_msg'));\n\n// Load the msg as the input was to the subflow\nconst pre_msg = JSON.parse(flow.get('input_msg'));\n\n// Return the input message alongside the outputs\nmsg = Object.assign(pre_msg, output_values);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 820,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "7d5dcacedbbc15e3",
        "type": "function",
        "z": "ad0b3a8015e7f49b",
        "name": "setup",
        "func": "// Define inputs\nconst env_keys = ['media_player', 'media_content_type', 'media_content_id', 'volume_level'];\n\n// Where should the parsed inputs be stored during the subflow\nconst storage = 'flow_storage';\n\n// Save the msg\nflow.set('input_msg', JSON.stringify(msg));\n\nmsg[storage] = {};\n\n// Check if string contains mustache\nconst containsMustache = (str) => {\n    const regex = /{{(?:(?!}}).+)}}/g;\n    return regex.test(str);\n}\n\n// Parse inputs\nenv_keys.forEach((env_key) => {\n    let env_value = env.get(env_key);\n    if (containsMustache(env_value)) {\n        env_value = env_value.replace(/(\\{{)\\s*(\\S+)\\s*(\\}})/g, \"$2\");\n        env_value = selectn(env_value, msg);\n    }\n    msg[storage][env_key] = env_value;\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 170,
        "y": 60,
        "wires": [
            [
                "b6fd16c3c12c6c48"
            ]
        ]
    },
    {
        "id": "b6fd16c3c12c6c48",
        "type": "api-current-state",
        "z": "ad0b3a8015e7f49b",
        "name": "TTS Muted?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.tts_mute",
        "state_type": "habool",
        "blockInputOverrides": false,
        "outputProperties": [],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 330,
        "y": 60,
        "wires": [
            [],
            [
                "9b2ab136d63e135e"
            ]
        ]
    },
    {
        "id": "9b2ab136d63e135e",
        "type": "switch",
        "z": "ad0b3a8015e7f49b",
        "name": "Volym satt?",
        "property": "flow_storage.volume_level",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "number",
                "vt": "number"
            },
            {
                "t": "istype",
                "v": "string",
                "vt": "string"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "b5dcc93fec6c966c"
            ],
            [
                "a9cc56f2b6cf47ed"
            ]
        ]
    },
    {
        "id": "b5dcc93fec6c966c",
        "type": "api-current-state",
        "z": "ad0b3a8015e7f49b",
        "name": "Hämta mediaspelare",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "{{ flow_storage.media_player }}",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "media_player_entity",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 720,
        "y": 60,
        "wires": [
            [
                "11ed05c4a7d9af59"
            ]
        ]
    },
    {
        "id": "11ed05c4a7d9af59",
        "type": "api-call-service",
        "z": "ad0b3a8015e7f49b",
        "name": "Sätt volym",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "media_player",
        "service": "volume_set",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "{{ flow_storage.media_player }}"
        ],
        "data": "{ \"volume_level\": flow_storage.volume_level }",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 930,
        "y": 60,
        "wires": [
            [
                "c512f6a566e58a44"
            ]
        ]
    },
    {
        "id": "50eb7190b4ecc241",
        "type": "api-call-service",
        "z": "ad0b3a8015e7f49b",
        "name": "Återställ volym",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "media_player",
        "service": "volume_set",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "{{ flow_storage.media_player }}"
        ],
        "data": "{ \"volume_level\": media_player_entity.attributes.volume_level }",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1300,
        "y": 60,
        "wires": [
            [
                "4bd83ca5e99a297a",
                "130a97d040fd0f62"
            ]
        ]
    },
    {
        "id": "c512f6a566e58a44",
        "type": "api-call-service",
        "z": "ad0b3a8015e7f49b",
        "name": "Spela media",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "media_player",
        "service": "play_media",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "{{ flow_storage.media_player }}"
        ],
        "data": "{\t   \"media_content_type\": flow_storage.media_content_type,\t   \"media_content_id\": flow_storage.media_content_id,\t   \"announce\": $env(\"announce\")\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1110,
        "y": 60,
        "wires": [
            [
                "50eb7190b4ecc241"
            ]
        ]
    },
    {
        "id": "a9cc56f2b6cf47ed",
        "type": "api-call-service",
        "z": "ad0b3a8015e7f49b",
        "name": "Spela media",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "media_player",
        "service": "play_media",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "{{ flow_storage.media_player }}"
        ],
        "data": "{\t   \"media_content_type\": flow_storage.media_content_type,\t   \"media_content_id\": flow_storage.media_content_id,\t   \"announce\": $env(\"announce\")\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 690,
        "y": 120,
        "wires": [
            [
                "05ae649663b26e09"
            ]
        ]
    },
    {
        "id": "4bd83ca5e99a297a",
        "type": "function",
        "z": "ad0b3a8015e7f49b",
        "name": "Skapa status",
        "func": "const text = msg.flow_storage.media_player;\n\nreturn {\n    payload: {\n        fill: \"green\",\n        text\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "130a97d040fd0f62",
        "type": "function",
        "z": "ad0b3a8015e7f49b",
        "name": "cleanup",
        "func": "// Define outputs\n// * Key - environment variable\n// * Value - msg path to value\nconst outputs = {};\n\nconst buildObjWithValue = (path, value = '') => {\n    const paths = path.split('.');\n    return paths.reduceRight((acc, item, index) => ({\n        [item]: index === paths.length - 1\n            ? value\n            : acc\n    }), {});\n}\n\n// Set output variables\nconst output_values = {};\nObject.keys(outputs).forEach((output_key) => {\n    const output_value_path = outputs[output_key];\n    const output_value_location = env.get(output_key);\n    const output_value = selectn(output_value_path, msg)\n    if (output_value_location && output_value_location !== \"\") {\n        Object.assign(output_values, buildObjWithValue(output_value_location, output_value));\n    }\n});\n\n// Load the msg as the input was to the subflow\nconst pre_msg = JSON.parse(flow.get('input_msg'));\n\n// Return the input message alongside the outputs\nmsg = Object.assign(pre_msg, output_values);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 1480,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "766039233a5d9cf0",
        "type": "api-current-state",
        "z": "17f3c422bcd5a1fb",
        "name": "TTS Muted?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.tts_mute",
        "state_type": "habool",
        "blockInputOverrides": false,
        "outputProperties": [],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 330,
        "y": 60,
        "wires": [
            [],
            [
                "c637bcaf14cc0c61"
            ]
        ]
    },
    {
        "id": "c029c322b1380a7b",
        "type": "function",
        "z": "17f3c422bcd5a1fb",
        "name": "Skapa status",
        "func": "const text = msg.flow_storage.media_player;\n\nreturn {\n    payload: {\n        fill: \"green\",\n        text\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1470,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "792a8dd0d8a39c60",
        "type": "function",
        "z": "17f3c422bcd5a1fb",
        "name": "setup",
        "func": "// Define inputs\nconst env_keys = ['media_player', 'message', 'volume_level'];\n\n// Where should the parsed inputs be stored during the subflow\nconst storage = 'flow_storage';\n\n// Save the msg\nflow.set('input_msg', JSON.stringify(msg));\n\nmsg[storage] = {};\n\n// Check if string contains mustache\nconst containsMustache = (str) => {\n    const regex = /{{(?:(?!}}).+)}}/g;\n    return regex.test(str);\n}\n\n// Parse inputs\nenv_keys.forEach((env_key) => {\n    let env_value = env.get(env_key);\n    if (containsMustache(env_value)) {\n        env_value = env_value.replace(/(\\{{)\\s*(\\S+)\\s*(\\}})/g, \"$2\");\n        env_value = selectn(env_value, msg);\n    }\n    msg[storage][env_key] = env_value;\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 170,
        "y": 60,
        "wires": [
            [
                "766039233a5d9cf0"
            ]
        ]
    },
    {
        "id": "665eda0df34dc544",
        "type": "function",
        "z": "17f3c422bcd5a1fb",
        "name": "cleanup",
        "func": "// Define outputs\n// * Key - environment variable\n// * Value - msg path to value\nconst outputs = {};\n\nconst buildObjWithValue = (path, value = '') => {\n    const paths = path.split('.');\n    return paths.reduceRight((acc, item, index) => ({\n        [item]: index === paths.length - 1\n            ? value\n            : acc\n    }), {});\n}\n\n// Set output variables\nconst output_values = {};\nObject.keys(outputs).forEach((output_key) => {\n    const output_value_path = outputs[output_key];\n    const output_value_location = env.get(output_key);\n    const output_value = selectn(output_value_path, msg)\n    if (output_value_location && output_value_location !== \"\") {\n        Object.assign(output_values, buildObjWithValue(output_value_location, output_value));\n    }\n});\n\n// Load the msg as the input was to the subflow\nconst pre_msg = JSON.parse(flow.get('input_msg'));\n\n// Return the input message alongside the outputs\nmsg = Object.assign(pre_msg, output_values);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 1480,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "c637bcaf14cc0c61",
        "type": "switch",
        "z": "17f3c422bcd5a1fb",
        "name": "Volym satt?",
        "property": "flow_storage.volume_level",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "number",
                "vt": "number"
            },
            {
                "t": "istype",
                "v": "string",
                "vt": "string"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "91e7a552c2264b02"
            ],
            [
                "0bd4cd1c91468aa0"
            ]
        ]
    },
    {
        "id": "91e7a552c2264b02",
        "type": "api-current-state",
        "z": "17f3c422bcd5a1fb",
        "name": "Hämta mediaspelare",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "{{ flow_storage.media_player }}",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "media_player_entity",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 720,
        "y": 60,
        "wires": [
            [
                "e45b6ee7a5750832"
            ]
        ]
    },
    {
        "id": "e45b6ee7a5750832",
        "type": "api-call-service",
        "z": "17f3c422bcd5a1fb",
        "name": "Sätt volym",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "media_player",
        "service": "volume_set",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "{{ flow_storage.media_player }}"
        ],
        "data": "{ \"volume_level\": flow_storage.volume_level }",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 930,
        "y": 60,
        "wires": [
            [
                "da0bd14c3672d4f2"
            ]
        ]
    },
    {
        "id": "da0bd14c3672d4f2",
        "type": "api-call-service",
        "z": "17f3c422bcd5a1fb",
        "name": "Spela TTS",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "tts",
        "service": "cloud_say",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "{{ flow_storage.media_player }}"
        ],
        "data": "{\t    \"message\": msg.flow_storage.message\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1110,
        "y": 60,
        "wires": [
            [
                "d9fa482c08da77e3"
            ]
        ]
    },
    {
        "id": "d9fa482c08da77e3",
        "type": "api-call-service",
        "z": "17f3c422bcd5a1fb",
        "name": "Återställ volym",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "media_player",
        "service": "volume_set",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "{{ flow_storage.media_player }}"
        ],
        "data": "{ \"volume_level\": media_player_entity.attributes.volume_level }",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1300,
        "y": 60,
        "wires": [
            [
                "665eda0df34dc544",
                "c029c322b1380a7b"
            ]
        ]
    },
    {
        "id": "0bd4cd1c91468aa0",
        "type": "api-call-service",
        "z": "17f3c422bcd5a1fb",
        "name": "Spela TTS",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "tts",
        "service": "cloud_say",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "{{ flow_storage.media_player }}"
        ],
        "data": "{\t    \"message\": msg.flow_storage.message\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 690,
        "y": 120,
        "wires": [
            [
                "7b567172d270dada"
            ]
        ]
    },
    {
        "id": "2263d8e231277a4e",
        "type": "api-call-service",
        "z": "17f3c422bcd5a1fb",
        "name": "Sätt volym",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "media_player",
        "service": "volume_set",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "{{ flow_storage.media_player }}"
        ],
        "data": "{ \"volume_level\": flow_storage.volume_level }",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1210,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ddea0968519555b8",
        "type": "ha-get-entities",
        "z": "bd6b3fc9fb3bede7",
        "name": "Hämta alla personer",
        "server": "e9739673.bbfed8",
        "version": 0,
        "rules": [
            {
                "property": "entity_id",
                "logic": "is",
                "value": "person\\.",
                "valueType": "re"
            }
        ],
        "output_type": "array",
        "output_empty_results": true,
        "output_location_type": "msg",
        "output_location": "person_entities",
        "output_results_count": 1,
        "x": 360,
        "y": 60,
        "wires": [
            [
                "b7130217d923b22c"
            ]
        ]
    },
    {
        "id": "b7130217d923b22c",
        "type": "function",
        "z": "bd6b3fc9fb3bede7",
        "name": "Plocka ut entity ids",
        "func": "const person_entity_ids = msg.person_entities.map((person) => person.entity_id);\n\nreturn {\n    ...msg,\n    persons: person_entity_ids\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 60,
        "wires": [
            [
                "908e6d016f436680",
                "306dae335005e8e4"
            ]
        ]
    },
    {
        "id": "908e6d016f436680",
        "type": "function",
        "z": "bd6b3fc9fb3bede7",
        "name": "Skapa status",
        "func": "const color = msg.persons.length > 0 ? \"green\": \"red\";\nconst text = msg.persons.join(', ')\n\nreturn {\n    payload: {\n        fill: color,\n        text\n    }\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e633149daa1a2584",
        "type": "function",
        "z": "bd6b3fc9fb3bede7",
        "name": "setup",
        "func": "// Define inputs\nconst env_keys = [];\n\n// Where should the parsed inputs be stored during the subflow\nconst storage = 'flow_storage';\n\n// Save the msg\nflow.set('input_msg', JSON.stringify(msg));\n\nmsg[storage] = {};\n\n// Check if string contains mustache\nconst containsMustache = (str) => {\n    const regex = /{{(?:(?!}}).+)}}/g;\n    return regex.test(str);\n}\n\n// Parse inputs\nenv_keys.forEach((env_key) => {\n    let env_value = env.get(env_key);\n    if (containsMustache(env_value)) {\n        env_value = env_value.replace(/(\\{{)\\s*(\\S+)\\s*(\\}})/g, \"$2\");\n        env_value = selectn(env_value, msg);\n    }\n    msg[storage][env_key] = env_value;\n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 170,
        "y": 60,
        "wires": [
            [
                "ddea0968519555b8"
            ]
        ]
    },
    {
        "id": "306dae335005e8e4",
        "type": "function",
        "z": "bd6b3fc9fb3bede7",
        "name": "cleanup",
        "func": "// Define outputs\n// * Key - environment variable\n// * Value - msg path to value\nconst outputs = {\n    'output_persons': 'persons'\n};\n\nconst buildObjWithValue = (path, value = '') => {\n    const paths = path.split('.');\n    return paths.reduceRight((acc, item, index) => ({\n        [item]: index === paths.length - 1\n            ? value\n            : acc\n    }), {});\n}\n\n// Set output variables\nconst output_values = {};\nObject.keys(outputs).forEach((output_key) => {\n    const output_value_path = outputs[output_key];\n    const output_value_location = env.get(output_key);\n    const output_value = selectn(output_value_path, msg)\n    if (output_value_location && output_value_location !== \"\") {\n        Object.assign(output_values, buildObjWithValue(output_value_location, output_value));\n    }\n});\n\n// Load the msg as the input was to the subflow\nconst pre_msg = JSON.parse(flow.get('input_msg'));\n\n// Return the input message alongside the outputs\nmsg = Object.assign(pre_msg, output_values);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "selectn",
                "module": "selectn"
            }
        ],
        "x": 780,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "3e917487f9509efc",
        "type": "server-state-changed",
        "z": "7c1b8ecc3bcbbebd",
        "g": "01342c3d53a6371c",
        "name": "Brytare Sovrum",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "switch.relay_bedroom",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 320,
        "wires": [
            [
                "d333661181e8ccf5"
            ],
            [
                "973f595125b71af7"
            ]
        ]
    },
    {
        "id": "d333661181e8ccf5",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "01342c3d53a6371c",
        "name": "Tänd lampa",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.ceiling_lamp_bedroom"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 450,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "973f595125b71af7",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "01342c3d53a6371c",
        "name": "Släck lampa",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.ceiling_lamp_bedroom"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 450,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "3b9d4fda06291e53",
        "type": "server-state-changed",
        "z": "7c1b8ecc3bcbbebd",
        "g": "01342c3d53a6371c",
        "name": "Lampa Sovrum",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "light.ceiling_lamp_bedroom",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 400,
        "wires": [
            [
                "83cd2c752c8e4186"
            ],
            [
                "3191172f2275f0d6"
            ]
        ]
    },
    {
        "id": "83cd2c752c8e4186",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "01342c3d53a6371c",
        "name": "Slå på brytare",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.relay_bedroom"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 460,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "3191172f2275f0d6",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "01342c3d53a6371c",
        "name": "Slå av brytare",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.relay_bedroom"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 460,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "09f11ee754c3da26",
        "type": "server-state-changed",
        "z": "7c1b8ecc3bcbbebd",
        "g": "906392ec964d3dab",
        "name": "Brytare Vardagsrum soffa",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "switch.relay_living_room_sofa",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 170,
        "y": 100,
        "wires": [
            [
                "9e1ab61fc84c0359"
            ],
            [
                "0a17adc6d42b515d"
            ]
        ]
    },
    {
        "id": "9e1ab61fc84c0359",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "906392ec964d3dab",
        "name": "Tänd lampa",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.ceiling_lamp_living_room"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 450,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "0a17adc6d42b515d",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "906392ec964d3dab",
        "name": "Släck lampa",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.ceiling_lamp_living_room"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 450,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "f084ec7f3de82348",
        "type": "server-state-changed",
        "z": "7c1b8ecc3bcbbebd",
        "g": "906392ec964d3dab",
        "name": "Lampa Vardagsrum soffa",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "light.ceiling_lamp_living_room",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 170,
        "y": 180,
        "wires": [
            [
                "32130c10373961a5"
            ],
            [
                "d5f851c978157a9f"
            ]
        ]
    },
    {
        "id": "32130c10373961a5",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "906392ec964d3dab",
        "name": "Slå på brytare",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.relay_living_room_sofa"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 460,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "d5f851c978157a9f",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "906392ec964d3dab",
        "name": "Slå av brytare",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.relay_living_room_sofa"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 460,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "8791af0aa2f6eb95",
        "type": "server-state-changed",
        "z": "7c1b8ecc3bcbbebd",
        "g": "657a994829f4573f",
        "name": "Brytare Hall 3",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "switch.relay_hallway_3",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 980,
        "wires": [
            [
                "4507b1e2cb8085fc"
            ],
            [
                "987bf4720dead3df"
            ]
        ]
    },
    {
        "id": "4507b1e2cb8085fc",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "657a994829f4573f",
        "name": "Tänd lampa",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.lamp_3_hallway"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 450,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "987bf4720dead3df",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "657a994829f4573f",
        "name": "Släck lampa",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.lamp_3_hallway"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 450,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "61e8d049b688a63e",
        "type": "server-state-changed",
        "z": "7c1b8ecc3bcbbebd",
        "g": "657a994829f4573f",
        "name": "Lampa Hall 3",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "light.lamp_3_hallway",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 1060,
        "wires": [
            [
                "e42beba3e8afcc2d"
            ],
            [
                "3835fda3ddccfb06"
            ]
        ]
    },
    {
        "id": "e42beba3e8afcc2d",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "657a994829f4573f",
        "name": "Slå på brytare",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.relay_hallway_3"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 460,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "3835fda3ddccfb06",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "657a994829f4573f",
        "name": "Slå av brytare",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.relay_hallway_3"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 460,
        "y": 1080,
        "wires": [
            []
        ]
    },
    {
        "id": "c2c38d7f85510778",
        "type": "server-state-changed",
        "z": "7c1b8ecc3bcbbebd",
        "g": "a41dac5adac5421d",
        "name": "Brytare Hall 2",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "switch.relay_hallway_2",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 760,
        "wires": [
            [
                "3d616dfc706c76af"
            ],
            [
                "55d2c8dd730b437c"
            ]
        ]
    },
    {
        "id": "3d616dfc706c76af",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "a41dac5adac5421d",
        "name": "Tänd lampa",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.lamp_2_hallway"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 450,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "55d2c8dd730b437c",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "a41dac5adac5421d",
        "name": "Släck lampa",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.lamp_2_hallway"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 450,
        "y": 780,
        "wires": [
            []
        ]
    },
    {
        "id": "18c53d47f54bf7bf",
        "type": "server-state-changed",
        "z": "7c1b8ecc3bcbbebd",
        "g": "a41dac5adac5421d",
        "name": "Lampa Hall 2",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "light.lamp_2_hallway",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 840,
        "wires": [
            [
                "f350126776b8d2bf"
            ],
            [
                "e2d369938e7b43be"
            ]
        ]
    },
    {
        "id": "f350126776b8d2bf",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "a41dac5adac5421d",
        "name": "Slå på brytare",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.relay_hallway_2"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 460,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "e2d369938e7b43be",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "a41dac5adac5421d",
        "name": "Slå av brytare",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.relay_hallway_2"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 460,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "2659e04f1506b9a4",
        "type": "server-state-changed",
        "z": "7c1b8ecc3bcbbebd",
        "g": "e08ca9117ba9237c",
        "name": "Brytare Entré",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "switch.relay_hallway_1",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 540,
        "wires": [
            [
                "d0e4cb73260a397a"
            ],
            [
                "b1372081cd149554"
            ]
        ]
    },
    {
        "id": "d0e4cb73260a397a",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "e08ca9117ba9237c",
        "name": "Tänd lampa",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.lamp_entrance_hallway"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 450,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "b1372081cd149554",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "e08ca9117ba9237c",
        "name": "Släck lampa",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.lamp_entrance_hallway"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 450,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "80e2cae131458d2b",
        "type": "server-state-changed",
        "z": "7c1b8ecc3bcbbebd",
        "g": "e08ca9117ba9237c",
        "name": "Lampa Entré",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "light.lamp_entrance_hallway",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 620,
        "wires": [
            [
                "1bf087c0a818fcbd"
            ],
            [
                "dccec8a7a80e5d82"
            ]
        ]
    },
    {
        "id": "1bf087c0a818fcbd",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "e08ca9117ba9237c",
        "name": "Slå på brytare",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.relay_hallway_1"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 460,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "dccec8a7a80e5d82",
        "type": "api-call-service",
        "z": "7c1b8ecc3bcbbebd",
        "g": "e08ca9117ba9237c",
        "name": "Slå av brytare",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.relay_hallway_1"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 460,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "67bf15aa9af16432",
        "type": "server-state-changed",
        "z": "8cf7f0d9a08b3655",
        "g": "016692fb15240c40",
        "name": "Rörelse Toalett",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.motion_toilet",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "5",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 120,
        "wires": [
            [
                "8b1f0a4ff7923be3"
            ],
            [
                "e70d386a804b3186"
            ]
        ]
    },
    {
        "id": "8b1f0a4ff7923be3",
        "type": "api-call-service",
        "z": "8cf7f0d9a08b3655",
        "g": "016692fb15240c40",
        "name": "Släck Lampor Toalett",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.all_toilet"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 400,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "e70d386a804b3186",
        "type": "api-call-service",
        "z": "8cf7f0d9a08b3655",
        "g": "016692fb15240c40",
        "name": "Tänd Lampor Toalett",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.all_toilet"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 400,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "2fe0ef961a349355",
        "type": "server-state-changed",
        "z": "8cf7f0d9a08b3655",
        "g": "a2c59dab1c39eb27",
        "name": "Rörelse Badrum",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.motion_bathroom",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "15",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 260,
        "wires": [
            [
                "a13be603a67e703a"
            ],
            []
        ]
    },
    {
        "id": "a13be603a67e703a",
        "type": "api-call-service",
        "z": "8cf7f0d9a08b3655",
        "g": "a2c59dab1c39eb27",
        "name": "Släck Lampor Badrum",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.all_bathroom"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 400,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "89e55bc55da527d0",
        "type": "api-call-service",
        "z": "8cf7f0d9a08b3655",
        "g": "15764dd4cae9897a",
        "name": "Släck Lampa Garderob",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.wardrobe_lamp_bedroom"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 410,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "b9e07ea95cb6d8e1",
        "type": "server-state-changed",
        "z": "8cf7f0d9a08b3655",
        "g": "15764dd4cae9897a",
        "name": "Rörelse Garderob",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.motion_sensor_wardrobe",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "1",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 360,
        "wires": [
            [
                "89e55bc55da527d0"
            ],
            []
        ]
    },
    {
        "id": "b8fe64363b5fef34",
        "type": "inject",
        "z": "1f26ba8a27c1477d",
        "g": "83c104c1e200db9f",
        "name": "22:00",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "7a77cd45f5393478"
            ]
        ]
    },
    {
        "id": "189bf1e4b8b66cb4",
        "type": "inject",
        "z": "1f26ba8a27c1477d",
        "g": "83c104c1e200db9f",
        "name": "07:00",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 280,
        "wires": [
            [
                "f011b702bd2a1309"
            ]
        ]
    },
    {
        "id": "7a77cd45f5393478",
        "type": "api-current-state",
        "z": "1f26ba8a27c1477d",
        "g": "83c104c1e200db9f",
        "name": "Nattlampa på?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.night_light_kids_bedroom",
        "state_type": "habool",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 300,
        "y": 340,
        "wires": [
            [
                "97423d588ca97b7e"
            ],
            []
        ]
    },
    {
        "id": "f011b702bd2a1309",
        "type": "api-current-state",
        "z": "1f26ba8a27c1477d",
        "g": "83c104c1e200db9f",
        "name": "Nattlampa på?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.night_light_kids_bedroom",
        "state_type": "habool",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 300,
        "y": 280,
        "wires": [
            [
                "0446ec6e9dda92d9"
            ],
            []
        ]
    },
    {
        "id": "5fef2779e12e1af1",
        "type": "server-state-changed",
        "z": "1f26ba8a27c1477d",
        "g": "178bf0b9061d0b5b",
        "name": "Väggknapp På",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "switch.relay_kids_bedroom",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 600,
        "wires": [
            [
                "12279ce84a315168",
                "8ef1e9e82c34c8b0"
            ],
            []
        ]
    },
    {
        "id": "3f9efcc8834f655a",
        "type": "server-state-changed",
        "z": "1f26ba8a27c1477d",
        "g": "b9ecb733de105962",
        "name": " Väggknapp Av",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "switch.relay_kids_bedroom",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "false",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 480,
        "wires": [
            [
                "192698308fb2d748"
            ],
            []
        ]
    },
    {
        "id": "8ef1e9e82c34c8b0",
        "type": "api-call-service",
        "z": "1f26ba8a27c1477d",
        "g": "178bf0b9061d0b5b",
        "name": "Taklampa På",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.ceiling_lamp_kids_bedroom"
        ],
        "data": "{\t    \"brightness_pct\": 100,\t    \"rgb_color\": [255,184,124]\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 330,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "3394244f52a3651b",
        "type": "api-call-service",
        "z": "1f26ba8a27c1477d",
        "g": "b9ecb733de105962",
        "name": "Taklampa Av",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.ceiling_lamp_kids_bedroom"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 710,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "e8f575e5dd5428a1",
        "type": "api-call-service",
        "z": "1f26ba8a27c1477d",
        "g": "178bf0b9061d0b5b",
        "name": "Nattlampa Av",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "input_boolean",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "input_boolean.night_light_kids_bedroom"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 520,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "97423d588ca97b7e",
        "type": "api-call-service",
        "z": "1f26ba8a27c1477d",
        "g": "0bb729de77f60250",
        "name": "Taklampa Röd",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.ceiling_lamp_kids_bedroom"
        ],
        "data": "{\t    \"brightness_pct\": 1,\t    \"rgb_color\": [\t        255,\t        0,\t        0\t    ]\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 620,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "0446ec6e9dda92d9",
        "type": "api-call-service",
        "z": "1f26ba8a27c1477d",
        "g": "0bb729de77f60250",
        "name": "Taklampa Grön",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.ceiling_lamp_kids_bedroom"
        ],
        "data": "{\t    \"brightness_pct\": 1,\t    \"rgb_color\": [\t        0,\t        255,\t        0\t    ]\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 620,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "30f1bd684c99b7de",
        "type": "api-current-state",
        "z": "1f26ba8a27c1477d",
        "g": "b9ecb733de105962",
        "name": "Nattlampa på?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.night_light_kids_bedroom",
        "state_type": "habool",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 520,
        "y": 440,
        "wires": [
            [
                "97423d588ca97b7e"
            ],
            [
                "3394244f52a3651b"
            ]
        ]
    },
    {
        "id": "245925ea62837296",
        "type": "server-state-changed",
        "z": "1f26ba8a27c1477d",
        "g": "832ac7f7a2975116",
        "name": "Nattlampa På",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean.night_light_kids_bedroom",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 180,
        "wires": [
            [
                "307eed8904a91f77"
            ],
            []
        ]
    },
    {
        "id": "608cb52462ac0c81",
        "type": "server-state-changed",
        "z": "1f26ba8a27c1477d",
        "g": "8f2e68f12915ae99",
        "name": "Nattlampa Av",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean.night_light_kids_bedroom",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "false",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 80,
        "wires": [
            [
                "01eff572884c1d07"
            ],
            []
        ]
    },
    {
        "id": "7e6877fe8a6653d6",
        "type": "api-call-service",
        "z": "1f26ba8a27c1477d",
        "g": "8f2e68f12915ae99",
        "name": "Taklampa Av",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "light",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "light.ceiling_lamp_kids_bedroom"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 490,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "12279ce84a315168",
        "type": "time-switch",
        "z": "1f26ba8a27c1477d",
        "g": "178bf0b9061d0b5b",
        "name": "22:00 - 07:00",
        "lat": "55.645870",
        "lon": "13.200610",
        "startTime": "22:00",
        "endTime": "07:00",
        "startOffset": 0,
        "endOffset": 0,
        "x": 330,
        "y": 600,
        "wires": [
            [
                "e8f575e5dd5428a1"
            ],
            []
        ]
    },
    {
        "id": "192698308fb2d748",
        "type": "time-switch",
        "z": "1f26ba8a27c1477d",
        "g": "b9ecb733de105962",
        "name": "22:00 - 07:00",
        "lat": "55.645870",
        "lon": "13.200610",
        "startTime": "22:00",
        "endTime": "07:00",
        "startOffset": 0,
        "endOffset": 0,
        "x": 330,
        "y": 480,
        "wires": [
            [
                "30f1bd684c99b7de"
            ],
            [
                "3394244f52a3651b"
            ]
        ]
    },
    {
        "id": "307eed8904a91f77",
        "type": "time-switch",
        "z": "1f26ba8a27c1477d",
        "g": "832ac7f7a2975116",
        "name": "22:00 - 07:00",
        "lat": "55.645870",
        "lon": "13.200610",
        "startTime": "22:00",
        "endTime": "07:00",
        "startOffset": 0,
        "endOffset": 0,
        "x": 310,
        "y": 180,
        "wires": [
            [
                "97423d588ca97b7e"
            ],
            []
        ]
    },
    {
        "id": "01eff572884c1d07",
        "type": "time-switch",
        "z": "1f26ba8a27c1477d",
        "g": "8f2e68f12915ae99",
        "name": "22:00 - 07:00",
        "lat": "55.645870",
        "lon": "13.200610",
        "startTime": "22:00",
        "endTime": "07:00",
        "startOffset": 0,
        "endOffset": 0,
        "x": 310,
        "y": 80,
        "wires": [
            [
                "7e6877fe8a6653d6"
            ],
            []
        ]
    },
    {
        "id": "525054d275a4df1b",
        "type": "server-state-changed",
        "z": "1f26ba8a27c1477d",
        "name": "Lampa på",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "light.ceiling_lamp_kids_bedroom",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 100,
        "y": 760,
        "wires": [
            [
                "f8fd07aa892e1f9b"
            ],
            []
        ]
    },
    {
        "id": "f8fd07aa892e1f9b",
        "type": "api-current-state",
        "z": "1f26ba8a27c1477d",
        "name": "Väggbrytare av?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "false",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "entity_id": "switch.relay_kids_bedroom",
        "state_type": "habool",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 280,
        "y": 760,
        "wires": [
            [
                "083229431baf9d69"
            ],
            []
        ]
    },
    {
        "id": "a7e8eebd90a38474",
        "type": "api-call-service",
        "z": "1f26ba8a27c1477d",
        "name": "Väggbrytare på",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.relay_kids_bedroom"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 700,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "d5fd42e1cafddab6",
        "type": "server-state-changed",
        "z": "1f26ba8a27c1477d",
        "name": "Lampa av",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "light.ceiling_lamp_kids_bedroom",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "false",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 100,
        "y": 820,
        "wires": [
            [
                "1c94d6a848b49a31"
            ],
            []
        ]
    },
    {
        "id": "1c94d6a848b49a31",
        "type": "api-current-state",
        "z": "1f26ba8a27c1477d",
        "name": "Väggbrytare på?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "entity_id": "switch.relay_kids_bedroom",
        "state_type": "habool",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 280,
        "y": 820,
        "wires": [
            [
                "7c8c145290d75f7f"
            ],
            []
        ]
    },
    {
        "id": "083229431baf9d69",
        "type": "api-current-state",
        "z": "1f26ba8a27c1477d",
        "name": "Nattlampa aktiv?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "entity_id": "binary_sensor.night_light_kids_bedroom_active",
        "state_type": "habool",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 490,
        "y": 760,
        "wires": [
            [],
            [
                "a7e8eebd90a38474"
            ]
        ]
    },
    {
        "id": "905b14865fdbd2b9",
        "type": "api-call-service",
        "z": "1f26ba8a27c1477d",
        "name": "Väggbrytare av",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.relay_kids_bedroom"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 700,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "7c8c145290d75f7f",
        "type": "api-current-state",
        "z": "1f26ba8a27c1477d",
        "name": "Nattlampa aktiv?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "entity_id": "binary_sensor.night_light_kids_bedroom_active",
        "state_type": "habool",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 490,
        "y": 820,
        "wires": [
            [],
            [
                "905b14865fdbd2b9"
            ]
        ]
    },
    {
        "id": "5470da52f33fe08a",
        "type": "subflow:5da5355c5d6e8223",
        "z": "896b946718d5907e",
        "g": "d38d059c9d7b5a0b",
        "name": "",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "58bd23dd8dcd24ea"
            ]
        ]
    },
    {
        "id": "58bd23dd8dcd24ea",
        "type": "api-current-state",
        "z": "896b946718d5907e",
        "g": "d38d059c9d7b5a0b",
        "name": "Larmat?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "armed_away",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "alarm_control_panel.alarmo",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 340,
        "y": 80,
        "wires": [
            [
                "c26011848a0452d9"
            ],
            [
                "1de41cddb747f07a"
            ]
        ]
    },
    {
        "id": "1de41cddb747f07a",
        "type": "api-call-service",
        "z": "896b946718d5907e",
        "g": "d38d059c9d7b5a0b",
        "name": "Vardagsrum - Stäng av ström",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.camera_living_room_privacy"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 560,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "c26011848a0452d9",
        "type": "api-call-service",
        "z": "896b946718d5907e",
        "g": "d38d059c9d7b5a0b",
        "name": "Vardagsrum - Sätt på ström",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.camera_living_room_privacy"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 560,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "f69b707795505743",
        "type": "subflow:5da5355c5d6e8223",
        "z": "896b946718d5907e",
        "g": "7f0fd93a794c7b06",
        "name": "",
        "x": 140,
        "y": 280,
        "wires": [
            [
                "323f86dd9f5cfe60"
            ]
        ]
    },
    {
        "id": "323f86dd9f5cfe60",
        "type": "api-current-state",
        "z": "896b946718d5907e",
        "g": "7f0fd93a794c7b06",
        "name": "Larmat?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "armed_away",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "alarm_control_panel.alarmo",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 340,
        "y": 280,
        "wires": [
            [
                "31e992625650a7b3",
                "d459f4a37575b73b"
            ],
            [
                "db7885a6041b1761",
                "8a8505f137c29f47"
            ]
        ]
    },
    {
        "id": "31e992625650a7b3",
        "type": "api-call-service",
        "z": "896b946718d5907e",
        "g": "7f0fd93a794c7b06",
        "name": "Barnens Sovrum - Sätt på Frigate detektering",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.camera_kids_bedroom_frigate_detect"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 660,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "db7885a6041b1761",
        "type": "api-call-service",
        "z": "896b946718d5907e",
        "g": "7f0fd93a794c7b06",
        "name": "Vardagsrum - Stäng av Frigate detektering",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.camera_living_room_frigate_detect"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 650,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "d459f4a37575b73b",
        "type": "api-call-service",
        "z": "896b946718d5907e",
        "g": "7f0fd93a794c7b06",
        "name": "Vardagsrum - Sätt på Frigate detektering",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.camera_living_room_frigate_detect"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 640,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "8a8505f137c29f47",
        "type": "api-call-service",
        "z": "896b946718d5907e",
        "g": "7f0fd93a794c7b06",
        "name": "Barnens Sovrum - Stäng av Frigate detektering",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.camera_kids_bedroom_frigate_detect"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 660,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "3fc508453f5a4bf3",
        "type": "server-state-changed",
        "z": "896b946718d5907e",
        "g": "2b75c890eff44cfb",
        "name": "Katt upptäckt",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.camera_garden_cat_occupancy",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 110,
        "y": 460,
        "wires": [
            [
                "1f21716b9f95f12a"
            ],
            []
        ]
    },
    {
        "id": "eba99b674a6786c2",
        "type": "server-state-changed",
        "z": "896b946718d5907e",
        "g": "00a032e1b75fa8ed",
        "name": "Kamera Dino Tillgänglig",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "camera.camera_dino_hd_stream",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "unavailable",
        "halt_if_type": "str",
        "halt_if_compare": "is_not",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 580,
        "wires": [
            [
                "0785c72b9a19417f",
                "04270f65108df369"
            ],
            []
        ]
    },
    {
        "id": "0785c72b9a19417f",
        "type": "subflow:c0dcc6a2aeb58851",
        "z": "896b946718d5907e",
        "g": "00a032e1b75fa8ed",
        "name": "",
        "env": [
            {
                "name": "notify_data",
                "value": "{\"message\":\"Dinos kamera är tillgänglig\"}",
                "type": "json"
            }
        ],
        "x": 420,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "04270f65108df369",
        "type": "subflow:17f3c422bcd5a1fb",
        "z": "896b946718d5907e",
        "g": "00a032e1b75fa8ed",
        "name": "",
        "env": [
            {
                "name": "media_player",
                "value": "media_player.homepod_kitchen",
                "type": "str"
            },
            {
                "name": "message",
                "value": "Dinos kamera är tillgänglig",
                "type": "str"
            }
        ],
        "x": 350,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "1f21716b9f95f12a",
        "type": "subflow:17f3c422bcd5a1fb",
        "z": "896b946718d5907e",
        "g": "2b75c890eff44cfb",
        "name": "",
        "env": [
            {
                "name": "media_player",
                "value": "media_player.homepod_kitchen",
                "type": "str"
            },
            {
                "name": "message",
                "value": "Elina och Alea! Det är en katt i trädgården. Gå dit och titta.",
                "type": "str"
            },
            {
                "name": "volume_level",
                "value": "0.5",
                "type": "num"
            }
        ],
        "x": 290,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "21fd8062b7da30b0",
        "type": "comment",
        "z": "9081c37be56bc95b",
        "g": "60a6418e9202f91b",
        "name": "Förhoppningsvis ska det redan ha blivit avlarmat",
        "info": "",
        "x": 240,
        "y": 260,
        "wires": []
    },
    {
        "id": "ae2f4571bf9c28d5",
        "type": "subflow:5c7f108f494183f7",
        "z": "9081c37be56bc95b",
        "g": "f3fabdf91855700f",
        "name": "",
        "env": [
            {
                "name": "output_person",
                "value": "person",
                "type": "str"
            }
        ],
        "x": 180,
        "y": 60,
        "wires": [
            [
                "7b9f40156304418e"
            ]
        ]
    },
    {
        "id": "0b509be3db326b86",
        "type": "subflow:10bf6a612840df6b",
        "z": "9081c37be56bc95b",
        "g": "75e39dcb53bdacc7",
        "name": "",
        "env": [
            {
                "name": "output_person",
                "value": "person",
                "type": "str"
            }
        ],
        "x": 170,
        "y": 160,
        "wires": [
            [
                "48c2925eb12eb26f"
            ]
        ]
    },
    {
        "id": "7ea3f7423d6c9264",
        "type": "server-state-changed",
        "z": "9081c37be56bc95b",
        "g": "60a6418e9202f91b",
        "name": "Albin öppnar ytterdörr",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.main_door_operator",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "Albin Medoc",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            },
            {
                "property": "person",
                "propertyType": "msg",
                "value": "person.albin",
                "valueType": "str"
            }
        ],
        "x": 160,
        "y": 320,
        "wires": [
            [
                "a80517abc44a8685"
            ],
            []
        ]
    },
    {
        "id": "c1fde7221f082bde",
        "type": "server-state-changed",
        "z": "9081c37be56bc95b",
        "g": "60a6418e9202f91b",
        "name": "Matilda öppnar ytterdörr",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.main_door_operator",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "Matilda Takkula",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            },
            {
                "property": "person",
                "propertyType": "msg",
                "value": "person.matilda",
                "valueType": "str"
            }
        ],
        "x": 170,
        "y": 380,
        "wires": [
            [
                "a80517abc44a8685"
            ],
            []
        ]
    },
    {
        "id": "d802c477e4a883f3",
        "type": "api-current-state",
        "z": "9081c37be56bc95b",
        "g": "819624756ad5ddb3",
        "name": "Larmat?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "armed_away",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "alarm_control_panel.alarmo",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 200,
        "y": 480,
        "wires": [
            [],
            [
                "f959494e33a8d5f0"
            ]
        ]
    },
    {
        "id": "f959494e33a8d5f0",
        "type": "function",
        "z": "9081c37be56bc95b",
        "g": "819624756ad5ddb3",
        "name": "Hämta dörrkod för person",
        "func": "\nconst person_entity_id = msg.person;\n\nconst person_name = person_entity_id.split('.')[1];\n\nconst secret_key = `lock_code_${person_name}`;\n\nconst code = global.get(secret_key);\n\nreturn {\n    ...msg,\n    code\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 480,
        "wires": [
            [
                "f40681a2f5d0b028"
            ]
        ]
    },
    {
        "id": "f40681a2f5d0b028",
        "type": "api-call-service",
        "z": "9081c37be56bc95b",
        "g": "819624756ad5ddb3",
        "name": "Aktivera larm",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "alarmo",
        "service": "arm",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "alarm_control_panel.alarmo"
        ],
        "data": "{\t    \"code\": msg.code,\t    \"mode\": \"away\",\t    \"skip_delay\": true,\t    \"force\": true\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 630,
        "y": 480,
        "wires": [
            [
                "8b850efc4a432f90"
            ]
        ]
    },
    {
        "id": "58d22ecab9d2941c",
        "type": "api-current-state",
        "z": "9081c37be56bc95b",
        "g": "dbf45413091d6098",
        "name": "Larmat?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "armed_away",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "alarm_control_panel.alarmo",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 200,
        "y": 580,
        "wires": [
            [
                "8609e6abb78f8068"
            ],
            []
        ]
    },
    {
        "id": "8609e6abb78f8068",
        "type": "function",
        "z": "9081c37be56bc95b",
        "g": "dbf45413091d6098",
        "name": "Hämta dörrkod för person",
        "func": "\nconst person_entity_id = msg.person;\n\nconst person_name = person_entity_id.split('.')[1];\n\nconst secret_key = `lock_code_${person_name}`;\n\nconst code = global.get(secret_key);\n\nreturn {\n    ...msg,\n    code\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 580,
        "wires": [
            [
                "7eb0434ae2b4a93a"
            ]
        ]
    },
    {
        "id": "7eb0434ae2b4a93a",
        "type": "api-call-service",
        "z": "9081c37be56bc95b",
        "g": "dbf45413091d6098",
        "name": "Inaktivera larm",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "alarmo",
        "service": "disarm",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "alarm_control_panel.alarmo"
        ],
        "data": "{\t    \"code\": msg.code\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 640,
        "y": 580,
        "wires": [
            [
                "1543208147c778e2"
            ]
        ]
    },
    {
        "id": "6cca731ae0297214",
        "type": "link in",
        "z": "9081c37be56bc95b",
        "g": "819624756ad5ddb3",
        "name": "Aktivera larm med personkod",
        "links": [],
        "x": 75,
        "y": 480,
        "wires": [
            [
                "d802c477e4a883f3"
            ]
        ]
    },
    {
        "id": "6d47bd9e0bf5c0e0",
        "type": "link in",
        "z": "9081c37be56bc95b",
        "g": "dbf45413091d6098",
        "name": "Inaktivera larm med personkod",
        "links": [],
        "x": 75,
        "y": 580,
        "wires": [
            [
                "58d22ecab9d2941c"
            ]
        ]
    },
    {
        "id": "a80517abc44a8685",
        "type": "link call",
        "z": "9081c37be56bc95b",
        "g": "60a6418e9202f91b",
        "name": "",
        "links": [
            "6d47bd9e0bf5c0e0"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 450,
        "y": 320,
        "wires": [
            [
                "f10a3c4729976592"
            ]
        ]
    },
    {
        "id": "7b9f40156304418e",
        "type": "link call",
        "z": "9081c37be56bc95b",
        "g": "f3fabdf91855700f",
        "name": "",
        "links": [
            "6d47bd9e0bf5c0e0"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 470,
        "y": 60,
        "wires": [
            [
                "59a1364f3a5958ea"
            ]
        ]
    },
    {
        "id": "48c2925eb12eb26f",
        "type": "link call",
        "z": "9081c37be56bc95b",
        "g": "75e39dcb53bdacc7",
        "name": "",
        "links": [
            "6cca731ae0297214"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 470,
        "y": 160,
        "wires": [
            [
                "626dbc36ba45a1c4"
            ]
        ]
    },
    {
        "id": "f10a3c4729976592",
        "type": "api-call-service",
        "z": "9081c37be56bc95b",
        "g": "60a6418e9202f91b",
        "name": "Skicka notis",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "mobile_app_albin_iphone",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\t    \"title\": \"Larm inaktiverat\",\t    \"message\": \t        $uppercase($substring($substringAfter(person, 'person.'), 0, 1))\t        & $substring($substringAfter(person, 'person.'), 1)\t        & \" låste upp dörren\"\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 690,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "626dbc36ba45a1c4",
        "type": "api-call-service",
        "z": "9081c37be56bc95b",
        "g": "75e39dcb53bdacc7",
        "name": "Skicka notis",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "parents",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\t    \"title\": \"Larm aktiverat\",\t    \"message\":\t        $uppercase($substring($substringAfter(person, 'person.'), 0, 1))\t        & $substring($substringAfter(person, 'person.'), 1)\t        & \" har lämnat hem\"\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 710,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "59a1364f3a5958ea",
        "type": "api-call-service",
        "z": "9081c37be56bc95b",
        "g": "f3fabdf91855700f",
        "name": "Skicka notis",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "parents",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\t    \"title\": \"Larm inaktiverat\",\t    \"message\": \t        $uppercase($substring($substringAfter(person, 'person.'), 0, 1))\t        & $substring($substringAfter(person, 'person.'), 1)\t        & \" har kommit hem\"\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 710,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "1b495b77b513d7da",
        "type": "server-state-changed",
        "z": "9081c37be56bc95b",
        "g": "66ec8226d6cd11e1",
        "name": "Ytterdörr öppen",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.door_main_hallway",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 140,
        "y": 680,
        "wires": [
            [
                "203e8450084e2033"
            ],
            []
        ]
    },
    {
        "id": "203e8450084e2033",
        "type": "api-current-state",
        "z": "9081c37be56bc95b",
        "g": "66ec8226d6cd11e1",
        "name": "Larmat?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "armed_away",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "alarm_control_panel.alarmo",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 320,
        "y": 680,
        "wires": [
            [
                "32bbbe0572b23f77"
            ],
            []
        ]
    },
    {
        "id": "32bbbe0572b23f77",
        "type": "api-call-service",
        "z": "9081c37be56bc95b",
        "g": "66ec8226d6cd11e1",
        "name": "Inaktivera larm",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "alarm_control_panel",
        "service": "alarm_disarm",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "alarm_control_panel.alarmo"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 500,
        "y": 680,
        "wires": [
            [
                "5b5f16ca973f1b0e"
            ]
        ]
    },
    {
        "id": "5b5f16ca973f1b0e",
        "type": "api-call-service",
        "z": "9081c37be56bc95b",
        "g": "66ec8226d6cd11e1",
        "name": "Skicka notis",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "mobile_app_albin_iphone",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\t    \"title\": \"Larm fel...\",\t    \"message\": \"Larmet inaktiverades av att någon öppnade dörren, så vill vi inte ha det.\"\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 690,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "2e0513112b568dfa",
        "type": "server-state-changed",
        "z": "9081c37be56bc95b",
        "g": "ac4a5fa8ce361c85",
        "name": "Rök upptäckt",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.smoke_detected",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 1200,
        "wires": [
            [
                "ee2aa044230da653"
            ],
            []
        ]
    },
    {
        "id": "ee2aa044230da653",
        "type": "api-call-service",
        "z": "9081c37be56bc95b",
        "g": "ac4a5fa8ce361c85",
        "name": "Skicka notis",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "parents",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\t   \"title\": \"Rök upptäckt!\",\t   \"message\": \"Rök upptäckt i hemmet! Det kanske brinner!\",\t   \"data\": {\t       \"push\": {\t           \"sound\": {\t               \"name\": \"default\",\t               \"critical\": 1,\t               \"volume\": 1\t            }\t        }\t    }\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 310,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "8b850efc4a432f90",
        "type": "link out",
        "z": "9081c37be56bc95b",
        "g": "819624756ad5ddb3",
        "name": "link out 1",
        "mode": "return",
        "links": [],
        "x": 755,
        "y": 480,
        "wires": []
    },
    {
        "id": "1543208147c778e2",
        "type": "link out",
        "z": "9081c37be56bc95b",
        "g": "dbf45413091d6098",
        "name": "link out 2",
        "mode": "return",
        "links": [],
        "x": 775,
        "y": 580,
        "wires": []
    },
    {
        "id": "daf827e5ff247e6a",
        "type": "server-events",
        "z": "9081c37be56bc95b",
        "g": "ea9720dad10ae7bd",
        "name": "Notifikation action",
        "server": "e9739673.bbfed8",
        "version": 2,
        "eventType": "mobile_app_notification_action",
        "exposeToHomeAssistant": false,
        "eventData": "",
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "waitForRunning": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            },
            {
                "property": "event_type",
                "propertyType": "msg",
                "value": "$outputData(\"eventData\").event_type",
                "valueType": "jsonata"
            }
        ],
        "x": 150,
        "y": 820,
        "wires": [
            [
                "283aacb4926f7f3b"
            ]
        ]
    },
    {
        "id": "283aacb4926f7f3b",
        "type": "switch",
        "z": "9081c37be56bc95b",
        "g": "ea9720dad10ae7bd",
        "name": "Inaktivera larm action? person?",
        "property": "payload.event.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "DISARM_ALBIN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "DISARM_MATILDA",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 820,
        "wires": [
            [
                "06737b5b192a39a8"
            ],
            [
                "71e1f5cac1cb11c5"
            ]
        ]
    },
    {
        "id": "06737b5b192a39a8",
        "type": "change",
        "z": "9081c37be56bc95b",
        "g": "ea9720dad10ae7bd",
        "name": "Sätt person Albin",
        "rules": [
            {
                "t": "set",
                "p": "person",
                "pt": "msg",
                "to": "person.albin",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 780,
        "wires": [
            [
                "67d1083ee5ac4427"
            ]
        ]
    },
    {
        "id": "71e1f5cac1cb11c5",
        "type": "change",
        "z": "9081c37be56bc95b",
        "g": "ea9720dad10ae7bd",
        "name": "Sätt person Matilda",
        "rules": [
            {
                "t": "set",
                "p": "person",
                "pt": "msg",
                "to": "person.matilda",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 860,
        "wires": [
            [
                "67d1083ee5ac4427"
            ]
        ]
    },
    {
        "id": "67d1083ee5ac4427",
        "type": "link call",
        "z": "9081c37be56bc95b",
        "g": "ea9720dad10ae7bd",
        "name": "",
        "links": [
            "6d47bd9e0bf5c0e0"
        ],
        "linkType": "static",
        "timeout": "30",
        "x": 930,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "b06ede3a469dc964",
        "type": "api-call-service",
        "z": "9081c37be56bc95b",
        "name": "Test Alarm notis Albin",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "mobile_app_albin_iphone",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"title\":\"Larm utlöst!\",\"message\":\"Håll inne för att visa mer information\",\"data\":{\"entity_id\":\"camera.camera_living_room_hd_stream\",\"push\":{\"sound\":{\"name\":\"default\",\"critical\":1,\"volume\":1}},\"actions\":[{\"action\":\"DISARM_ALBIN\",\"title\":\"Inaktivera larm\",\"destructive\":true,\"icon\":\"sfsymbols:bell.slash\",\"authenticationRequired\":true}],\"persistent\":true,\"tag\":\"persistent\"}}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 320,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "f6a0ca354f4a7bec",
        "type": "inject",
        "z": "9081c37be56bc95b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 120,
        "y": 1300,
        "wires": [
            [
                "b06ede3a469dc964"
            ]
        ]
    },
    {
        "id": "72cf3dd514774f5f",
        "type": "api-call-service",
        "z": "9081c37be56bc95b",
        "g": "2c760ae190629011",
        "name": "Aktivera scen \"Inte hemma\"",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "scene",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "scene.not_home"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 440,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "6addbb6abca1c9c1",
        "type": "subflow:10bf6a612840df6b",
        "z": "9081c37be56bc95b",
        "g": "2c760ae190629011",
        "name": "",
        "env": [
            {
                "name": "output_person",
                "value": "person",
                "type": "str"
            }
        ],
        "x": 170,
        "y": 1100,
        "wires": [
            [
                "72cf3dd514774f5f"
            ]
        ]
    },
    {
        "id": "f7768fbab71ef429",
        "type": "server-state-changed",
        "z": "9081c37be56bc95b",
        "g": "0dae13e1d2f37ed0",
        "name": "Larm utlöst",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "alarm_control_panel.alarmo",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "triggered",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 960,
        "wires": [
            [
                "694decc229ffefc0"
            ],
            []
        ]
    },
    {
        "id": "28b7e3190283b558",
        "type": "comment",
        "z": "9081c37be56bc95b",
        "g": "0dae13e1d2f37ed0",
        "name": "Tittar inte på vilket läge",
        "info": "",
        "x": 160,
        "y": 1000,
        "wires": []
    },
    {
        "id": "694decc229ffefc0",
        "type": "subflow:bd6b3fc9fb3bede7",
        "z": "9081c37be56bc95b",
        "g": "0dae13e1d2f37ed0",
        "name": "",
        "env": [
            {
                "name": "output_persons",
                "value": "payload",
                "type": "str"
            }
        ],
        "x": 330,
        "y": 960,
        "wires": [
            [
                "8ae24a3cefea69b6"
            ]
        ]
    },
    {
        "id": "8ae24a3cefea69b6",
        "type": "split",
        "z": "9081c37be56bc95b",
        "g": "0dae13e1d2f37ed0",
        "name": "För varje person",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 540,
        "y": 960,
        "wires": [
            [
                "960bfb8e4169253b"
            ]
        ]
    },
    {
        "id": "960bfb8e4169253b",
        "type": "function",
        "z": "9081c37be56bc95b",
        "g": "0dae13e1d2f37ed0",
        "name": "Skapa notis",
        "func": "const person_entity_id = msg.payload;\nconst person_name = person_entity_id.split('.')[1];\nconst disarm_action = `DISARM_${person_name.toUpperCase()}`;\n\nconst notify_data = {\n    \"title\": \"Larm utlöst!\",\n        \"message\": \"Håll inne för att visa mer information\",\n            \"data\": {\n        \"entity_id\": \"camera.camera_living_room_hd_stream\",\n            \"push\": {\n            \"sound\": {\n                \"name\": \"default\",\n                    \"critical\": 1,\n                        \"volume\": 1\n            }\n        },\n        \"actions\": [\n            {\n                \"action\": disarm_action,\n                \"title\": \"Inaktivera larm\",\n                \"destructive\": true,\n                \"icon\": \"sfsymbols:bell.slash\",\n                \"authenticationRequired\": true\n            }\n        ],\n            \"persistent\": true,\n                \"tag\": \"persistent\"\n    }\n}\n\nreturn {\n    ...msg,\n    notify_data\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 960,
        "wires": [
            [
                "ada400995e3d7452"
            ]
        ]
    },
    {
        "id": "ada400995e3d7452",
        "type": "subflow:9577215509c764c6",
        "z": "9081c37be56bc95b",
        "g": "0dae13e1d2f37ed0",
        "name": "",
        "env": [
            {
                "name": "person",
                "value": "{{payload}}",
                "type": "str"
            },
            {
                "name": "notify_data",
                "value": "{{notify_data}}",
                "type": "str"
            }
        ],
        "x": 940,
        "y": 960,
        "wires": [
            []
        ]
    },
    {
        "id": "7bfda30ac040bd4c",
        "type": "comment",
        "z": "9081c37be56bc95b",
        "g": "ea9720dad10ae7bd",
        "name": "Sök upp personen istället",
        "info": "",
        "x": 390,
        "y": 780,
        "wires": []
    },
    {
        "id": "2d4f29ef982ab65e",
        "type": "server-state-changed",
        "z": "f6c266122b405d78",
        "d": true,
        "g": "05d687da1ce7b06d",
        "name": "Börjar dammsuga",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "vacuum.cleanmate",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "cleaning",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 150,
        "y": 80,
        "wires": [
            [
                "8d28e6dfa1bfb9b0"
            ],
            []
        ]
    },
    {
        "id": "f9b987ce12fc245a",
        "type": "comment",
        "z": "f6c266122b405d78",
        "name": "Sätt upp ett schema",
        "info": "Någon dag i veckan när ingen är hemma",
        "x": 130,
        "y": 320,
        "wires": []
    },
    {
        "id": "8d28e6dfa1bfb9b0",
        "type": "api-current-state",
        "z": "f6c266122b405d78",
        "d": true,
        "g": "05d687da1ce7b06d",
        "name": "Larmat?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "armed_away",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "alarm_control_panel.alarmo",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 340,
        "y": 80,
        "wires": [
            [
                "6d1d2435763bad74"
            ],
            []
        ]
    },
    {
        "id": "0c709adc70a7b981",
        "type": "api-call-service",
        "z": "f6c266122b405d78",
        "d": true,
        "g": "c77bf66ac0de544c",
        "name": "Aktivera larm",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "alarm_control_panel",
        "service": "alarm_arm_away",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 690,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "6d1d2435763bad74",
        "type": "api-call-service",
        "z": "f6c266122b405d78",
        "d": true,
        "g": "05d687da1ce7b06d",
        "name": "Larma hemma",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "alarm_control_panel",
        "service": "alarm_arm_home",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 540,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "43a51cdd1bafdc8f",
        "type": "server-state-changed",
        "z": "f6c266122b405d78",
        "d": true,
        "g": "c77bf66ac0de544c",
        "name": "Dockad",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "vacuum.cleanmate",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "docked",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 110,
        "y": 200,
        "wires": [
            [
                "3f2ab8b96d1ab88c"
            ],
            []
        ]
    },
    {
        "id": "3f2ab8b96d1ab88c",
        "type": "api-current-state",
        "z": "f6c266122b405d78",
        "d": true,
        "g": "c77bf66ac0de544c",
        "name": "Ingen hemma",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "0",
        "halt_if_type": "num",
        "halt_if_compare": "is",
        "entity_id": "zone.home",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 300,
        "y": 200,
        "wires": [
            [
                "7421bc525afa4694"
            ],
            []
        ]
    },
    {
        "id": "7421bc525afa4694",
        "type": "api-current-state",
        "z": "f6c266122b405d78",
        "d": true,
        "g": "c77bf66ac0de544c",
        "name": "Larmat?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "armed_away",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "alarm_control_panel.alarmo",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 500,
        "y": 200,
        "wires": [
            [],
            [
                "0c709adc70a7b981"
            ]
        ]
    },
    {
        "id": "24ebb2e2.2f6ffe",
        "type": "file in",
        "z": "9d7cd8ae.f2fe48",
        "g": "86f8f4678672d22a",
        "name": "Läs secrets.yaml",
        "filename": "/config/secrets.yaml",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 370,
        "y": 180,
        "wires": [
            [
                "2c59ff99.2affc"
            ]
        ]
    },
    {
        "id": "2c59ff99.2affc",
        "type": "yaml",
        "z": "9d7cd8ae.f2fe48",
        "g": "86f8f4678672d22a",
        "property": "payload",
        "name": "Parse yaml",
        "x": 570,
        "y": 180,
        "wires": [
            [
                "9e7c7d2d.fdeb8"
            ]
        ]
    },
    {
        "id": "9e7c7d2d.fdeb8",
        "type": "function",
        "z": "9d7cd8ae.f2fe48",
        "g": "86f8f4678672d22a",
        "name": "Sätt global config vars",
        "func": "for (let [key, value] of Object.entries(msg.payload)) {\n  global.set(key,value);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "ac0fc7a.efcc038",
        "type": "comment",
        "z": "9d7cd8ae.f2fe48",
        "g": "86f8f4678672d22a",
        "name": "Kör vid HA start",
        "info": "",
        "x": 120,
        "y": 120,
        "wires": []
    },
    {
        "id": "3a583032.2662b",
        "type": "comment",
        "z": "9d7cd8ae.f2fe48",
        "g": "86f8f4678672d22a",
        "name": "Sätt global config vars från secrets.yaml",
        "info": "https://bonani.tech/make-a-node-red-flow-run-on-home-assistant-start/",
        "x": 560,
        "y": 120,
        "wires": []
    },
    {
        "id": "1323cb3a16877935",
        "type": "comment",
        "z": "9d7cd8ae.f2fe48",
        "g": "86f8f4678672d22a",
        "name": "https://community.home-assistant.io/t/use-secrets-from-secrets-yaml-in-node-red-flow/168586/8",
        "info": "",
        "x": 370,
        "y": 60,
        "wires": []
    },
    {
        "id": "2b7ad1b2216adaa5",
        "type": "subflow:5da5355c5d6e8223",
        "z": "9d7cd8ae.f2fe48",
        "g": "86f8f4678672d22a",
        "name": "",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "24ebb2e2.2f6ffe"
            ]
        ]
    },
    {
        "id": "aad95164dda26a61",
        "type": "inject",
        "z": "9d7cd8ae.f2fe48",
        "g": "2e59710b52d84cd4",
        "name": "03.00",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 03 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 280,
        "wires": [
            [
                "bc6575adb8f391d5"
            ]
        ]
    },
    {
        "id": "bc6575adb8f391d5",
        "type": "api-call-service",
        "z": "9d7cd8ae.f2fe48",
        "g": "2e59710b52d84cd4",
        "name": "Starta om Intel NUC",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "hassio",
        "service": "host_reboot",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 300,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "4b411ef3ab4191f7",
        "type": "server-state-changed",
        "z": "9d7cd8ae.f2fe48",
        "g": "d45aea997f43d7df",
        "name": "Home Assistant Core Update",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "update.home_assistant_core_update",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 160,
        "y": 380,
        "wires": [
            [
                "7c9eac7cf14500bf"
            ],
            []
        ]
    },
    {
        "id": "c86e931d7bf34a6d",
        "type": "server-state-changed",
        "z": "9d7cd8ae.f2fe48",
        "g": "d45aea997f43d7df",
        "name": "Home Assistant Supervisor Update",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "update.home_assistant_supervisor_update",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 180,
        "y": 440,
        "wires": [
            [
                "7c9eac7cf14500bf"
            ],
            []
        ]
    },
    {
        "id": "7c9eac7cf14500bf",
        "type": "api-call-service",
        "z": "9d7cd8ae.f2fe48",
        "g": "d45aea997f43d7df",
        "name": "Skicka notis till Albin",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "mobile_app_albin_iphone",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\t    \"message\": \"Det finns en ny version av Home Assistant!\"\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 500,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "f876c5ceabd6750a",
        "type": "server-state-changed",
        "z": "9d7cd8ae.f2fe48",
        "g": "a2a2c7d13b2d1495",
        "name": "Tillgänglig HACS uppdatering",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.hacs",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "num",
        "haltifstate": "0",
        "halt_if_type": "num",
        "halt_if_compare": "gt",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 160,
        "y": 540,
        "wires": [
            [
                "0b4e37880bc471a9"
            ],
            []
        ]
    },
    {
        "id": "f3ed7dd986d07d37",
        "type": "api-call-service",
        "z": "9d7cd8ae.f2fe48",
        "g": "a2a2c7d13b2d1495",
        "name": "Skicka notis till Albin",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "mobile_app_albin_iphone",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\t    \"message\": \"Det finns en ny uppdatering!\"\t}",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 640,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "0b4e37880bc471a9",
        "type": "function",
        "z": "9d7cd8ae.f2fe48",
        "g": "a2a2c7d13b2d1495",
        "name": "Skapa meddelande",
        "func": "const repositories = msg.data.attributes.repositories;\n\nconst repository_names = repositories.map((repository) => repository.display_name);\n\nconst getRepositoryNameText = (repository_names) => {\n    // Get the last repository name\n    const last_repository_name = repository_names.pop();\n\n    // If there is any more repository names\n    if (repository_names.length > 0) {\n        return `${repository_names.join(', ')} och ${last_repository_name}`;\n    }\n    return last_repository_name;\n}\n\nconst message = `Det finns en ny HACS uppdatering, ${getRepositoryNameText(repository_names)}.`\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 540,
        "wires": [
            [
                "f3ed7dd986d07d37"
            ]
        ]
    },
    {
        "id": "c0c5a3195dcfdaf2",
        "type": "server-state-changed",
        "z": "791362d653843ce3",
        "name": "Nattläge",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean.night_mode",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 120,
        "y": 80,
        "wires": [
            [
                "e28d10c163b78031"
            ],
            []
        ]
    },
    {
        "id": "e28d10c163b78031",
        "type": "api-call-service",
        "z": "791362d653843ce3",
        "name": "Godnatt scen",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "scene",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "scene.night"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 380,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "2d08fecae482dcf5",
        "type": "server-state-changed",
        "z": "7f81ec7457fe49ea",
        "g": "44db05102350bff2",
        "name": "Wifi nere",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.google_wifi_system",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            },
            {
                "property": "media_player",
                "propertyType": "msg",
                "value": "media_player.homepod_kitchen",
                "valueType": "str"
            },
            {
                "property": "media_content_id",
                "propertyType": "msg",
                "value": "media-source://media_source/local/internet_lost.mp3",
                "valueType": "str"
            }
        ],
        "x": 160,
        "y": 260,
        "wires": [
            [
                "ba50e8a79539d91d"
            ],
            []
        ]
    },
    {
        "id": "7c4a2c32df048562",
        "type": "inject",
        "z": "7f81ec7457fe49ea",
        "g": "7f13b2d75f7cc15f",
        "name": "22.00",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 22 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "013f788a0fdefbef"
            ]
        ]
    },
    {
        "id": "75421ea3e1257808",
        "type": "inject",
        "z": "7f81ec7457fe49ea",
        "g": "7f13b2d75f7cc15f",
        "name": "07.00",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "00 07 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 140,
        "wires": [
            [
                "382b9c2d249ca286"
            ]
        ]
    },
    {
        "id": "013f788a0fdefbef",
        "type": "api-call-service",
        "z": "7f81ec7457fe49ea",
        "g": "7f13b2d75f7cc15f",
        "name": "TTS Mute",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "input_boolean",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "input_boolean.tts_mute"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 300,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "382b9c2d249ca286",
        "type": "api-call-service",
        "z": "7f81ec7457fe49ea",
        "g": "7f13b2d75f7cc15f",
        "name": "TTS Unmute",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "input_boolean",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "input_boolean.tts_mute"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 310,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e817e7770e87a376",
        "type": "server-state-changed",
        "z": "7f81ec7457fe49ea",
        "g": "0634c713d7c382b4",
        "name": "Wifi uppe",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.google_wifi_system",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            },
            {
                "property": "media_player",
                "propertyType": "msg",
                "value": "media_player.homepod_kitchen",
                "valueType": "str"
            },
            {
                "property": "media_content_id",
                "propertyType": "msg",
                "value": "media-source://media_source/local/internet_established.mp3",
                "valueType": "str"
            }
        ],
        "x": 160,
        "y": 360,
        "wires": [
            [
                "56c6103e9c8baab5"
            ],
            []
        ]
    },
    {
        "id": "9a4d8e04d32ec0e5",
        "type": "server-state-changed",
        "z": "7f81ec7457fe49ea",
        "g": "bef63f036ef05e26",
        "name": "Tvättmaskin klar",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.washing_machine",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            },
            {
                "property": "media_player",
                "propertyType": "msg",
                "value": "media_player.homepod_kitchen",
                "valueType": "str"
            },
            {
                "property": "media_content_id",
                "propertyType": "msg",
                "value": "media-source://media_source/local/washer_done.mp3",
                "valueType": "str"
            }
        ],
        "x": 160,
        "y": 480,
        "wires": [
            [
                "a9d8c044c5a33e66"
            ],
            []
        ]
    },
    {
        "id": "c54677c2173b9501",
        "type": "server-state-changed",
        "z": "7f81ec7457fe49ea",
        "g": "997af72d18e55a49",
        "name": "Ytterdörr öppen 5 min",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.door_main_hallway",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "habool",
        "haltifstate": "true",
        "halt_if_type": "bool",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "5",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            },
            {
                "property": "media_player",
                "propertyType": "msg",
                "value": "media_player.homepod_kitchen",
                "valueType": "str"
            },
            {
                "property": "message",
                "propertyType": "msg",
                "value": "Ytterdörr har varit öppen i 5 minuter. Den borde kanske stängas?",
                "valueType": "str"
            }
        ],
        "x": 180,
        "y": 680,
        "wires": [
            [
                "ac1fd26cc03af2dc"
            ],
            []
        ]
    },
    {
        "id": "ac1fd26cc03af2dc",
        "type": "subflow:17f3c422bcd5a1fb",
        "z": "7f81ec7457fe49ea",
        "g": "997af72d18e55a49",
        "name": "",
        "env": [
            {
                "name": "media_player",
                "value": "media_player.homepod_kitchen",
                "type": "str"
            },
            {
                "name": "message",
                "value": "Ytterdörr har varit öppen i 5 minuter. Den borde kanske stängas?",
                "type": "str"
            }
        ],
        "x": 390,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "a9d8c044c5a33e66",
        "type": "subflow:ad0b3a8015e7f49b",
        "z": "7f81ec7457fe49ea",
        "g": "bef63f036ef05e26",
        "name": "",
        "env": [
            {
                "name": "media_player",
                "value": "media_player.homepod_kitchen",
                "type": "str"
            },
            {
                "name": "media_content_id",
                "value": "media-source://media_source/local/washer_done.mp3",
                "type": "str"
            }
        ],
        "x": 350,
        "y": 480,
        "wires": []
    },
    {
        "id": "56c6103e9c8baab5",
        "type": "subflow:ad0b3a8015e7f49b",
        "z": "7f81ec7457fe49ea",
        "g": "0634c713d7c382b4",
        "name": "",
        "env": [
            {
                "name": "media_player",
                "value": "media_player.homepod_kitchen",
                "type": "str"
            },
            {
                "name": "media_content_id",
                "value": "media-source://media_source/local/internet_established.mp3",
                "type": "str"
            }
        ],
        "x": 330,
        "y": 360,
        "wires": []
    },
    {
        "id": "ba50e8a79539d91d",
        "type": "subflow:ad0b3a8015e7f49b",
        "z": "7f81ec7457fe49ea",
        "g": "44db05102350bff2",
        "name": "",
        "env": [
            {
                "name": "media_player",
                "value": "media_player.homepod_kitchen",
                "type": "str"
            },
            {
                "name": "media_content_id",
                "value": "media-source://media_source/local/internet_lost.mp3",
                "type": "str"
            }
        ],
        "x": 330,
        "y": 260,
        "wires": []
    },
    {
        "id": "09eb4ce045377709",
        "type": "server-state-changed",
        "z": "7f81ec7457fe49ea",
        "g": "9acaa0666b5b68d6",
        "name": "AirFryer klar",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.airfryer_active",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            },
            {
                "property": "media_player",
                "propertyType": "msg",
                "value": "media_player.homepod_kitchen",
                "valueType": "str"
            },
            {
                "property": "media_content_id",
                "propertyType": "msg",
                "value": "media-source://media_source/local/washer_done.mp3",
                "valueType": "str"
            }
        ],
        "x": 150,
        "y": 580,
        "wires": [
            [
                "e7cf591bc8ae49b7"
            ],
            []
        ]
    },
    {
        "id": "e7cf591bc8ae49b7",
        "type": "subflow:ad0b3a8015e7f49b",
        "z": "7f81ec7457fe49ea",
        "g": "9acaa0666b5b68d6",
        "name": "",
        "env": [
            {
                "name": "media_player",
                "value": "media_player.homepod_kitchen",
                "type": "str"
            },
            {
                "name": "media_content_id",
                "value": "media-source://media_source/local/air_fryer_done.mp3",
                "type": "str"
            }
        ],
        "x": 350,
        "y": 580,
        "wires": []
    },
    {
        "id": "bc88b940133a5f0a",
        "type": "comment",
        "z": "7f81ec7457fe49ea",
        "name": "Gör så dessa inte körs när templates laddas om",
        "info": "",
        "x": 680,
        "y": 620,
        "wires": []
    },
    {
        "id": "e0ef91ffabc79baa",
        "type": "server-state-changed",
        "z": "59b6382f2b4b4619",
        "g": "ca425b51ea70d657",
        "name": "Samsung TV Vardagsrum på",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "media_player.samsung_tv_vardagsrum",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "on",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 180,
        "y": 80,
        "wires": [
            [
                "733c04aaaa75aef8"
            ],
            []
        ]
    },
    {
        "id": "733c04aaaa75aef8",
        "type": "api-current-state",
        "z": "59b6382f2b4b4619",
        "g": "ca425b51ea70d657",
        "name": "TV Vardagsrum av?",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.tv_living_room_on",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 430,
        "y": 80,
        "wires": [
            [
                "dd89f3d78cc0ddc4"
            ],
            []
        ]
    },
    {
        "id": "dd89f3d78cc0ddc4",
        "type": "api-call-service",
        "z": "59b6382f2b4b4619",
        "g": "ca425b51ea70d657",
        "name": "TV Vardagsrum på",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "input_boolean",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "input_boolean.tv_living_room_on"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 650,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "108711782342764d",
        "type": "server-state-changed",
        "z": "59b6382f2b4b4619",
        "g": "8d64418785067593",
        "name": "ChromeCast av 5 min",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "media_player.chromecast_bedroom",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "5",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 160,
        "y": 260,
        "wires": [
            [
                "5a752c4a7ee2bb9a"
            ],
            []
        ]
    },
    {
        "id": "6a811b5ff4e50888",
        "type": "switch",
        "z": "59b6382f2b4b4619",
        "g": "8d64418785067593",
        "name": "Var avstängd?",
        "property": "data.old_state.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 340,
        "wires": [
            [
                "881e055aefec352a"
            ]
        ]
    },
    {
        "id": "145e4d491c2bf0e8",
        "type": "server-state-changed",
        "z": "59b6382f2b4b4619",
        "g": "8d64418785067593",
        "name": "ChromeCast overksam",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "media_player.chromecast_bedroom",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "idle",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 160,
        "y": 340,
        "wires": [
            [
                "6a811b5ff4e50888"
            ],
            []
        ]
    },
    {
        "id": "881e055aefec352a",
        "type": "api-call-service",
        "z": "59b6382f2b4b4619",
        "g": "8d64418785067593",
        "name": "Sätt på Plug Tv Socrum",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_on",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.plug_tv_bedroom"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 610,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "5a752c4a7ee2bb9a",
        "type": "api-call-service",
        "z": "59b6382f2b4b4619",
        "g": "8d64418785067593",
        "name": "Stäng av Plug Tv Socrum",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "switch",
        "service": "turn_off",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "switch.plug_tv_bedroom"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 410,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "6bfc01e7166f0255",
        "type": "api-call-service",
        "z": "59b6382f2b4b4619",
        "g": "8d64418785067593",
        "name": "Pausa ChromeCast",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "media_player",
        "service": "media_pause",
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.chromecast_bedroom"
        ],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 330,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "1c6e050d5d9776e4",
        "type": "server-state-changed",
        "z": "59b6382f2b4b4619",
        "g": "8d64418785067593",
        "name": "TV Sovrum av",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "media_player.tv_sovrum",
        "entityidfiltertype": "exact",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "off",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 200,
        "wires": [
            [
                "6bfc01e7166f0255"
            ],
            []
        ]
    },
    {
        "id": "8dd22f7676bd5610",
        "type": "ha-zone",
        "z": "cd9a5746e1f519c9",
        "g": "87f9c3202c8c5ccc",
        "name": "Matilda lämnar jobb",
        "server": "e9739673.bbfed8",
        "version": 0,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entities": [
            "person.matilda"
        ],
        "event": "leave",
        "zones": [
            "zone.matilda_work"
        ],
        "x": 150,
        "y": 80,
        "wires": [
            [
                "ccfee6fd12b97e52"
            ]
        ]
    },
    {
        "id": "ccfee6fd12b97e52",
        "type": "api-current-state",
        "z": "cd9a5746e1f519c9",
        "g": "87f9c3202c8c5ccc",
        "name": "Albin är hemma",
        "server": "e9739673.bbfed8",
        "version": 3,
        "outputs": 2,
        "halt_if": "home",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "person.albin",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 360,
        "y": 80,
        "wires": [
            [
                "4dbb2d100e9c7495"
            ],
            []
        ],
        "outputLabels": [
            "home",
            "not home"
        ]
    },
    {
        "id": "4dbb2d100e9c7495",
        "type": "api-call-service",
        "z": "cd9a5746e1f519c9",
        "g": "87f9c3202c8c5ccc",
        "name": "Skicka notis till Albin",
        "server": "e9739673.bbfed8",
        "version": 5,
        "debugenabled": false,
        "domain": "notify",
        "service": "mobile_app_albin_iphone",
        "areaId": [],
        "deviceId": [],
        "entityId": [],
        "data": "{\"message\":\"Matilda har lämnat salongen\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 580,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "80edc5eabfbb154b",
        "type": "ha-wait-until",
        "z": "cd9a5746e1f519c9",
        "g": "50b6ce68ea1dbe94",
        "name": "Vänta tills dörren öppnas",
        "server": "e9739673.bbfed8",
        "version": 2,
        "outputs": 2,
        "entityId": "binary_sensor.door_main_hallway",
        "entityIdFilterType": "exact",
        "property": "state",
        "comparator": "is",
        "value": "on",
        "valueType": "str",
        "timeout": "5",
        "timeoutType": "num",
        "timeoutUnits": "minutes",
        "checkCurrentState": true,
        "blockInputOverrides": true,
        "outputProperties": [],
        "entityLocation": "data",
        "entityLocationType": "none",
        "x": 170,
        "y": 240,
        "wires": [
            [
                "e5154d67fa33cfb1"
            ],
            []
        ]
    },
    {
        "id": "e5154d67fa33cfb1",
        "type": "function",
        "z": "cd9a5746e1f519c9",
        "g": "50b6ce68ea1dbe94",
        "name": "Beräkna intervall (-3 min)",
        "func": "const person_home_time = new Date(msg.data.new_state.last_changed);\n\nconst history_start = new Date(person_home_time.getTime() - 1000 * 60 * 3);\n\nreturn {\n    ...msg,\n    history_start: history_start.toISOString()\n};",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 170,
        "y": 300,
        "wires": [
            [
                "28480c50575baa3f"
            ]
        ]
    },
    {
        "id": "28480c50575baa3f",
        "type": "ha-get-entities",
        "z": "cd9a5746e1f519c9",
        "g": "50b6ce68ea1dbe94",
        "name": "Vem har kommit hem inom intervallet",
        "server": "e9739673.bbfed8",
        "version": 0,
        "rules": [
            {
                "property": "last_changed",
                "logic": "gte",
                "value": "msg.history_start",
                "valueType": "jsonata"
            },
            {
                "property": "entity_id",
                "logic": "is",
                "value": "person\\.",
                "valueType": "re"
            },
            {
                "property": "state",
                "logic": "is",
                "value": "home",
                "valueType": "str"
            }
        ],
        "output_type": "array",
        "output_empty_results": false,
        "output_location_type": "msg",
        "output_location": "payload",
        "output_results_count": 1,
        "x": 210,
        "y": 360,
        "wires": [
            [
                "15964651208c3bfe"
            ]
        ]
    },
    {
        "id": "15964651208c3bfe",
        "type": "function",
        "z": "cd9a5746e1f519c9",
        "g": "50b6ce68ea1dbe94",
        "name": "Skapa meddelande",
        "func": "const persons = msg.payload.map((person) => person.entity_id.split('.')[1]);\n\nconst getPersonText = (persons) => {\n    // Get the last person\n    const last_person = persons.pop();\n\n    // If there is any more persons\n    if(persons.length > 0){\n        return `${persons.join(', ')} och ${last_person}`;\n    }\n    return last_person;\n}\n\nreturn {\n    ...msg,\n    message: `Välkomm${persons.length > 1 ? 'na' : 'en'} hem ${getPersonText(persons)}`\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 150,
        "y": 420,
        "wires": [
            [
                "9e24eaa95fb2667a"
            ]
        ]
    },
    {
        "id": "dbb164dc10673f73",
        "type": "subflow:17f3c422bcd5a1fb",
        "z": "cd9a5746e1f519c9",
        "g": "50b6ce68ea1dbe94",
        "name": "",
        "env": [
            {
                "name": "media_player",
                "value": "media_player.sonos_lamp_living_room",
                "type": "str"
            },
            {
                "name": "message",
                "value": "{{ message }}",
                "type": "str"
            }
        ],
        "x": 130,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "d5236c0e8b8eb513",
        "type": "server-state-changed",
        "z": "cd9a5746e1f519c9",
        "g": "50b6ce68ea1dbe94",
        "name": "Någon kommer hem",
        "server": "e9739673.bbfed8",
        "version": 4,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "person\\.",
        "entityidfiltertype": "regex",
        "outputinitially": false,
        "state_type": "str",
        "haltifstate": "home",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 2,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "person",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 150,
        "y": 180,
        "wires": [
            [
                "80edc5eabfbb154b"
            ],
            []
        ]
    },
    {
        "id": "9e24eaa95fb2667a",
        "type": "delay",
        "z": "cd9a5746e1f519c9",
        "g": "50b6ce68ea1dbe94",
        "name": "Vänta 10s",
        "pauseType": "delay",
        "timeout": "10",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 120,
        "y": 480,
        "wires": [
            [
                "dbb164dc10673f73"
            ]
        ]
    }
]