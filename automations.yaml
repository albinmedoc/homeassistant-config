- id: '1668465104974'
  alias: Notis vid dåligt batteri
  description: Skicka ut en notifikation när sensorer har dåligt batteri.
  use_blueprint:
    path: gmlupatelli/low_battery_notification.yaml
    input:
      threshold: 15
      actions:
      - data:
          title: Dåligt batteri
          message: '{{sensors}}'
        action: notify.mobile_app_albin_iphone
      time: 09:00:00
      exclude:
        entity_id:
        - sensor.matilda_iphone_app_battery_level
        - sensor.albin_iphone_app_battery_level
- id: '1675933105028'
  alias: Persistent notifikation - Otillgängliga entiteter
  description: Skapa persistent notifikation om otillgängliga enheter, avvisa om inga.
  trigger:
  - platform: state
    entity_id: sensor.unavailable_entities
    attribute: entity_id
    to:
  condition:
  - condition: template
    value_template: "{{ is_number(trigger.from_state.state)\n    and is_number(trigger.to_state.state)
      }}\n"
  action:
  - if:
    - condition: numeric_state
      entity_id: sensor.unavailable_entities
      below: 1
    then:
    - data:
        notification_id: unavailable_entities
      action: persistent_notification.dismiss
    else:
    - data:
        notification_id: unavailable_entities
        title: "{{ \"Otillgängliga entiteter (\" ~ states(\"sensor.unavailable_entities\")
          ~ \")\" }} \n"
        message: "{% set ns = namespace(result=[]) %} {% for s in expand(state_attr('sensor.unavailable_entities',
          'entity_id')) %}\n  {% set ns.result = ns.result + [\n      device_attr(s.entity_id,
          \"name\") ~ \"|\" ~ device_id(s.entity_id) ~ \"|- **\" ~ s.name ~ \"**\\n\"\n
          \     ~ \"  - *entity_id*: \" ~ s.entity_id ~ \"\\n\"\n      ~ \"  - *state*:
          \" ~ s.state ~ \"\\n\"\n    ]\n  %}\n{% endfor %}\n{% set ns.result = ns.result
          | sort %} {% set lastdev = namespace( id=\"\" ) %} {% set tarr = ns.result
          %} {% set ns.result = [] %} {% for item in tarr %}\n  {% set dev = namespace(
          id=\"\" ) %}\n  {% set entity = namespace( data=\"\" ) %}\n  {% set dev.id
          = item.split(\"|\")[1] %}\n  {% set entity.data = item.split(\"|\")[2] %}\n
          \ {% if lastdev.id != dev.id %}\n    {% if dev.id != 'None' %}\n      {%
          set ns.result = ns.result + [ \n        \"**<a href=\\\"/config/devices/device/\"
          ~ dev.id ~ \"\\\">\" ~ \n        (device_attr(dev.id, \"name_by_user\")
          if device_attr(dev.id, \"name_by_user\") is not none else device_attr(dev.id,
          \"name\")) ~ \n        \"</a>**\" \n    ] %}\n    {% else %}\n      {% set
          ns.result = ns.result + [ \"**Icke-enhetsentiteter**\" ] %}\n    {% endif
          %}\n    {% set lastdev.id = dev.id %}\n  {% endif %}\n  {% set ns.result
          = ns.result + [ entity.data ] %}\n{% endfor %} {{ ns.result | join('\\n')
          }}\n"
      action: persistent_notification.create
  mode: restart
- id: '1733071971928'
  alias: Julbelysning
  description: ''
  triggers:
  - trigger: time
    at: '16:00:00'
    id: 'on'
  - trigger: time
    at: '22:00:00'
    id: 'off'
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - 'off'
    then:
    - action: light.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: light.xmas
    else:
    - action: light.turn_on
      metadata: {}
      data: {}
      target:
        entity_id: light.xmas
  mode: single
- id: '1757078313019'
  alias: NSPanel Entré
  description: Konfiguration för NSPanel vid entrén
  use_blueprint:
    path: Blackymas/nspanel_blueprint.yaml
    input:
      nspanel_name: a4fab9dadf4f2179b4f024d3d3d0fdf9
      language: sv
      date_format: '%A, %-d/%-m'
      timezone: Europe/Stockholm (CET-1CEST,M3.5.0,M10.5.0/3)
      decimal_separator: ','
      qrcode_label: WiFi
      home_button05_icon: mdi:wifi
      qrcode_enabled: true
      qrcode_value: WIFI:T:WPA;S:Medoc Guest;P:Rakavagen12;H:false;
      left_button_name: Framsida
      weather_entity: weather.smhi
      relay_1_local_fallback: true
      relay_2_local_fallback: true
      right_button_name: Hall
      chip01: light.all
      chip01_icon: ''
      right_button_entity: light.all_entrance
      left_button_entity: light.all_outside_front
