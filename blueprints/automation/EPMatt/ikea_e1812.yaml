blueprint:
  name: Controller - IKEA E1812 TRÅDFRI Shortcut button
  description: "# Controller - IKEA E1812 TRÅDFRI Shortcut button\n\nController automation
    for executing any kind of action triggered by the provided IKEA E1812 TRÅDFRI
    Shortcut button.\nAllows to optionally loop an action on a button long press.\nThe
    blueprint handles double button press events natively as it is supported by the
    controller device itself.\nSupports Zigbee2MQTT, ZHA, deCONZ.\n\nAutomations created
    with this blueprint can be connected with one or more [Hooks](https://epmatt.github.io/awesome-ha-blueprints/docs/blueprints/hooks)
    supported by this controller.\nHooks allow to easily create controller-based automations
    for interacting with media players, lights, covers and more.\nSee the list of
    [Hooks available for this controller](https://epmatt.github.io/awesome-ha-blueprints/docs/blueprints/controllers/ikea_e1812#available-hooks)
    for additional details.\n\n## More Info\n\nℹ️ Version 2025.04.12\n\U0001F4DD [Changelog](https://epmatt.github.io/awesome-ha-blueprints/docs/blueprints/controllers/ikea_e1812/#changelog)\n\U0001F4D5
    Full documentation regarding this blueprint is available [here](https://epmatt.github.io/awesome-ha-blueprints/docs/blueprints/controllers/ikea_e1812).\n\n\U0001F680
    This blueprint is part of the **[Awesome HA Blueprints](https://epmatt.github.io/awesome-ha-blueprints)
    project**. Please consider **[leaving a star on GitHub](https://github.com/EPMatt/awesome-ha-blueprints)**!
    \U0001F31F\n"
  source_url: https://github.com/EPMatt/awesome-ha-blueprints/blob/main/blueprints/controllers/ikea_e1812/ikea_e1812.yaml
  domain: automation
  homeassistant:
    min_version: 2024.10.0
  input:
    controller_device:
      name: (Required) (Zigbee2MQTT, ZHA, deCONZ) Controller Device
      description: The controller device to use for the automation. Choose a value
        only if the remote is integrated with deCONZ, ZHA, Zigbee2MQTT.
      default: ''
      selector:
        device:
          filter:
          - integration: mqtt
            manufacturer: IKEA
            model: TRADFRI shortcut button
          - integration: mqtt
            manufacturer: IKEA
            model: TRADFRI shortcut button (E1812)
          - integration: zha
            manufacturer: IKEA of Sweden
            model: TRADFRI SHORTCUT Button
          - integration: deconz
            manufacturer: IKEA of Sweden
            model: TRADFRI SHORTCUT Button
          multiple: false
    action_button_short:
      name: (Optional) Button short press
      description: Action to run on short button press.
      default: []
      selector:
        action: {}
    action_button_long:
      name: (Optional) Button long press
      description: Action to run on long button press.
      default: []
      selector:
        action: {}
    action_button_release:
      name: (Optional) Button release
      description: Action to run on button release after long press.
      default: []
      selector:
        action: {}
    action_button_double:
      name: (Optional) Button double press
      description: Action to run on double button press.
      default: []
      selector:
        action: {}
    long_press_options_section:
      name: Long Press options
      icon: mdi:remote
      collapsed: true
      input:
        button_long_loop:
          name: (Optional) Button long press - loop until release
          description: Loop the button action until the button is released.
          default: false
          selector:
            boolean: {}
        button_long_max_loop_repeats:
          name: (Optional) Button long press - Maximum loop repeats
          description: Maximum number of repeats for the custom action, when looping
            is enabled. Use it as a safety limit to prevent an endless loop in case
            the corresponding stop event is not received.
          default: 20
          selector:
            number:
              min: 1.0
              max: 1000.0
              mode: slider
              step: 1.0
        helper_long_press_delay:
          name: (Optional) Helper - Long Press delay
          description: Max delay between the pushing and releasing of a button long
            press event. Increase this value if you notice that the long press action
            is not triggered properly.
          default: 250
          selector:
            number:
              min: 100.0
              max: 5000.0
              unit_of_measurement: milliseconds
              mode: box
              step: 10.0
variables:
  controller_id: !input controller_device
  integration_id: '{{ trigger.id.split("-")[0] }}'
  button_long_loop: !input button_long_loop
  button_long_max_loop_repeats: !input button_long_max_loop_repeats
  helper_long_press_delay: !input helper_long_press_delay
  actions_mapping:
    z2m:
      button_short:
      - 'on'
      button_long:
      - brightness_move_up
      button_release:
      - brightness_stop
      button_double:
      - 'off'
    zha:
      button_short:
      - 'on'
      button_long:
      - move_with_on_off_0_83
      button_release:
      - stop
      button_double:
      - 'off'
    dcz:
      button_short:
      - '1002'
      button_long:
      - '1001'
      button_release:
      - '1003'
      button_double:
      - '1004'
  button_short: '{{ actions_mapping[integration_id]["button_short"] }}'
  button_long: '{{ actions_mapping[integration_id]["button_long"] }}'
  button_release: '{{ actions_mapping[integration_id]["button_release"] }}'
  button_double: '{{ actions_mapping[integration_id]["button_double"] }}'
mode: single
max_exceeded: silent
triggers:
- trigger: device
  id: z2m-button-short
  domain: mqtt
  device_id: !input controller_device
  type: action
  subtype: 'on'
- trigger: device
  id: z2m-button-long
  domain: mqtt
  device_id: !input controller_device
  type: action
  subtype: brightness_move_up
- trigger: device
  id: z2m-button-release
  domain: mqtt
  device_id: !input controller_device
  type: action
  subtype: brightness_stop
- trigger: device
  id: z2m-button-double
  domain: mqtt
  device_id: !input controller_device
  type: action
  subtype: 'off'
- trigger: event
  id: zha-button-short
  event_type: zha_event
  event_data:
    device_id: !input controller_device
    command: 'on'
    endpoint_id: 1
    cluster_id: 6
- trigger: event
  id: zha-button-long
  event_type: zha_event
  event_data:
    device_id: !input controller_device
    command: move
    endpoint_id: 1
    cluster_id: 8
- trigger: event
  id: zha-button-release
  event_type: zha_event
  event_data:
    device_id: !input controller_device
    command: stop
    endpoint_id: 1
    cluster_id: 8
- trigger: event
  id: zha-button-double
  event_type: zha_event
  event_data:
    device_id: !input controller_device
    command: 'off'
    endpoint_id: 1
    cluster_id: 6
- trigger: event
  id: dcz-button-short
  event_type: deconz_event
  event_data:
    device_id: !input controller_device
    event: '1002'
- trigger: event
  id: dcz-button-long
  event_type: deconz_event
  event_data:
    device_id: !input controller_device
    event: '1001'
- trigger: event
  id: dcz-button-release
  event_type: deconz_event
  event_data:
    device_id: !input controller_device
    event: '1003'
- trigger: event
  id: dcz-button-double
  event_type: deconz_event
  event_data:
    device_id: !input controller_device
    event: '1004'
conditions:
- condition: and
  conditions:
  - '{%- set trigger_action -%} {%- if integration_id == "z2m" -%} {{ trigger.payload
    }} {%- elif integration_id == "zha" -%} {{ trigger.event.data.command }}{{"_"
    if trigger.event.data.args|length > 0}}{{ trigger.event.data.args|join("_") }}
    {%- elif integration_id == "dcz" -%} {{ trigger.event.data.event }} {%- endif
    -%} {%- endset -%} {{ trigger_action not in ["","None","unknown"] }}'
actions:
- choose:
  - conditions:
    - condition: trigger
      id:
      - z2m-button-short
      - zha-button-short
      - dcz-button-short
    sequence:
    - event: ahb_controller_event
      event_data:
        controller: '{{ controller_id }}'
        action: button_short
    - choose:
      - conditions: []
        sequence: !input action_button_short
  - conditions:
    - condition: trigger
      id:
      - z2m-button-long
      - zha-button-long
      - dcz-button-long
    sequence:
    - event: ahb_controller_event
      event_data:
        controller: '{{ controller_id }}'
        action: button_long
    - choose:
      - conditions: []
        sequence: !input action_button_long
    - choose:
      - conditions: '{{ button_long_loop }}'
        sequence:
        - repeat:
            count: !input button_long_max_loop_repeats
            sequence:
            - parallel:
              - sequence: !input action_button_long
              - sequence:
                - choose:
                  - conditions: []
                    sequence:
                    - wait_for_trigger:
                      - trigger: device
                        domain: mqtt
                        device_id: !input controller_device
                        type: action
                        subtype: stop
                      - trigger: event
                        event_type: zha_event
                        event_data:
                          device_id: !input controller_device
                          command: stop
                          endpoint_id: 1
                          cluster_id: 8
                      - trigger: event
                        event_type: deconz_event
                        event_data:
                          device_id: !input controller_device
                          event: '1003'
                      timeout:
                        milliseconds: !input helper_long_press_delay
                      continue_on_timeout: true
                    - if:
                      - condition: template
                        value_template: '{{ wait.trigger.idx is defined }}'
                      then:
                      - event: ahb_controller_event
                        event_data:
                          controller: '{{ controller_id }}'
                          action: button_release
                      - choose:
                        - conditions: []
                          sequence: !input action_button_release
                      - stop: button_released
  - conditions:
    - condition: trigger
      id:
      - z2m-button-release
      - zha-button-release
      - dcz-button-release
    sequence:
    - event: ahb_controller_event
      event_data:
        controller: '{{ controller_id }}'
        action: button_release
    - choose:
      - conditions: []
        sequence: !input action_button_release
  - conditions:
    - condition: trigger
      id:
      - z2m-button-double
      - zha-button-double
      - dcz-button-double
    sequence:
    - event: ahb_controller_event
      event_data:
        controller: '{{ controller_id }}'
        action: button_double
    - choose:
      - conditions: []
        sequence: !input action_button_double
